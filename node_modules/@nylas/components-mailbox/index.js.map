{"version":3,"file":"index.js","sources":["../../commons/src/define-component-patch.ts","../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../commons/src/store/error.ts","../../commons/src/methods/api.ts","../../commons/src/connections/contacts.ts","../../commons/src/connections/threads.ts","../../commons/src/connections/manifest.ts","../../commons/src/connections/messages.ts","../../commons/src/connections/accounts.ts","../../commons/src/connections/neural.ts","../../commons/src/connections/availability.ts","../../commons/src/store/availability.ts","../../commons/src/store/consecutive-availability.ts","../../commons/src/store/contacts.ts","../../commons/src/store/contact-avatar.ts","../../commons/src/store/mailbox.ts","../../commons/src/store/manifest.ts","../../commons/src/connections/files.ts","../../commons/src/store/files.ts","../../commons/src/methods/component.ts","../../commons/src/components/NError.svelte","../../commons/src/enums/Nylas.ts","../../commons/src/connections/folders.ts","../../commons/src/store/folders.ts","../../commons/src/connections/labels.ts","../../commons/src/store/labels.ts","../email/src/assets/chevron-down.svg","../email/src/assets/trash-alt.svg","../email/src/assets/envelope-open-text.svg","../email/src/assets/envelope.svg","../email/src/assets/attachment.svg","../email/src/assets/arrow-line.svg","../email/src/assets/no-messages.svg","../email/src/assets/draft.svg","../../commons/src/components/ContactImage/ContactImage.svelte","../../node_modules/dompurify/dist/purify.js","../../commons/src/constants/attachment-content-types.ts","../../commons/src/components/MessageBody.svelte","../../commons/src/components/Tooltip.svelte","../email/src/assets/loading.svg","../email/src/Email.svelte","src/assets/envelope-open-text.svg","src/assets/envelope.svg","src/assets/loading.svg","src/assets/trash-alt.svg","src/assets/double-left-arrow.svg","src/assets/left-arrow.svg","src/assets/right-arrow.svg","src/assets/double-right-arrow.svg","src/components/PaginationNav.svelte","src/Mailbox.svelte"],"sourcesContent":["export const originalDefine = window.customElements.define.bind(\n  window.customElements,\n);\nwindow.customElements.define = (name: string, ...args) => {\n  if (customElements.get(name)) {\n    return;\n  }\n  return originalDefine(name, ...args);\n};\n","function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.44.3' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { Writable, writable } from \"svelte/store\";\nimport type { Manifest } from \"@commons/types/Nylas\";\n\ntype ErrorStore = Record<string, Manifest[\"error\"]>;\n\nfunction initialize(): Writable<ErrorStore> {\n  return writable({});\n}\n\nexport const ErrorStore = initialize();\n","import { ErrorStore } from \"../store/error\";\nimport type { Manifest } from \"@commons/types/Nylas\";\n\nexport async function handleResponse<T = unknown>(\n  response: Response,\n): Promise<T> {\n  if (!response.ok) {\n    const passedError = await response\n      .json()\n      .then((json: { message: string; name: string }) => json);\n    const error = new Error(passedError.message);\n    error.name = passedError.name;\n    return Promise.reject({ message: error, statusCode: response.status });\n  }\n  return response.json();\n}\n\ntype HTTPMethod = \"POST\" | \"GET\" | \"PUT\" | \"PATCH\" | \"OPTIONS\" | undefined;\n\ntype FetchOptions = {\n  body?: unknown;\n  method?: HTTPMethod;\n  component_id?: string;\n  access_token?: string;\n};\n\nexport function getFetchConfig(\n  opts: FetchOptions = { component_id: \"\" },\n): RequestInit {\n  return {\n    method: opts.method || \"GET\", // GET is default method\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      \"X-Component-Id\": opts.component_id || \"\", // Component ID is passed as header\n      \"X-Access-Token\": opts.access_token || \"\", // Access Token is passed as header\n    },\n    body: opts.body ? JSON.stringify(opts.body) : undefined,\n  };\n}\n\nexport function handleError(id: string, error: Manifest[\"error\"]): never {\n  if (process.env.NODE_ENV !== \"production\") console.error(error);\n  ErrorStore.update((errorMap) => ({ ...errorMap, [id]: error }));\n  throw error;\n}\n\nconst REGION_MAPPING: Record<string, string> = {\n  \"001\": \"\", // US\n  \"002\": \"ireland-\", // EU\n  \"003\": \"canada-\", // Canada\n};\n\nexport function getMiddlewareApiUrl(id: string): string {\n  let region = \"\";\n  if (id.substring(3, 4) === \"-\") {\n    const code = id.substring(0, 3);\n    if (typeof REGION_MAPPING[code] !== \"undefined\") {\n      region = REGION_MAPPING[code];\n    }\n  }\n  const API_GATEWAY = `https://${region}${process.env.API_GATEWAY}`;\n  return API_GATEWAY;\n}\n\nexport function silence(error: Error) {}\n","import {\n  getFetchConfig,\n  handleError,\n  handleResponse,\n  getMiddlewareApiUrl,\n} from \"../methods/api\";\nimport type {\n  ContactsQuery,\n  Contact,\n  ContactSearchQuery,\n} from \"@commons/types/Contacts\";\nimport type { MiddlewareResponse, Thread } from \"@commons/types/Nylas\";\n\nexport const fetchContacts = async (\n  query: ContactsQuery,\n  offset: number,\n  limit: number,\n): Promise<Contact[]> => {\n  const contacts = await fetch(\n    `${getMiddlewareApiUrl(\n      query.component_id,\n    )}/contact-list/contacts?limit=${limit}&offset=${offset}`,\n    getFetchConfig({\n      component_id: query.component_id,\n      access_token: query.access_token,\n    }),\n  )\n    .then((response) => handleResponse<MiddlewareResponse<Contact[]>>(response))\n    .then((json) => {\n      return json.response;\n    })\n    .catch((error) => handleError(query.component_id, error));\n  return contacts ?? [];\n};\n\n// query.query should be a queryString as defined at https://docs.nylas.com/reference#contacts-1\nexport const fetchContactsByQuery = async (\n  query: ContactSearchQuery,\n): Promise<Contact[]> => {\n  const contacts = await fetch(\n    `${getMiddlewareApiUrl(query.component_id)}/contacts${query.query}`,\n    getFetchConfig({\n      component_id: query.component_id,\n      access_token: query.access_token,\n    }),\n  )\n    .then((response) => handleResponse<MiddlewareResponse<Contact[]>>(response))\n    .then((json) => {\n      return json.response;\n    })\n    .catch((error) => handleError(query.component_id, error));\n\n  return contacts ?? [];\n};\n\nexport const fetchContactImage = async (\n  query: ContactsQuery,\n  id: string,\n): Promise<string> => {\n  return await fetch(\n    `${getMiddlewareApiUrl(query.component_id)}/contacts/${id}/picture`,\n    getFetchConfig({\n      component_id: query.component_id,\n      access_token: query.access_token,\n    }),\n  )\n    .then((response) => handleResponse<MiddlewareResponse<string>>(response))\n    .then((json) => {\n      return json.response;\n    })\n    .catch((error) => handleError(query.component_id, error));\n};\n\nexport const fetchContactThreads = async (\n  query: ContactsQuery,\n  offset: number,\n  limit: number,\n): Promise<Thread[]> => {\n  return await fetch(\n    `${getMiddlewareApiUrl(\n      query.component_id,\n    )}/threads?offset=${offset}&limit=${limit}`,\n    getFetchConfig(query),\n  )\n    .then((response) => handleResponse<MiddlewareResponse<Thread[]>>(response))\n    .then((json) => {\n      return json.response;\n    })\n    .catch((error) => handleError(query.component_id, error));\n};\n","import {\n  getFetchConfig,\n  handleError,\n  handleResponse,\n  getMiddlewareApiUrl,\n} from \"../methods/api\";\nimport type {\n  MailboxQuery,\n  Thread,\n  ConversationQuery,\n  Conversation,\n  MiddlewareResponse,\n} from \"@commons/types/Nylas\";\n\nexport const fetchThreads = (\n  query: MailboxQuery,\n  limit: number,\n  offset: number,\n): Promise<Thread[]> => {\n  let queryString = `${getMiddlewareApiUrl(\n    query.component_id,\n  )}/threads?view=expanded&not_in=trash&limit=${limit}&offset=${offset}`;\n  if (query.query) {\n    Object.entries(query.query).forEach(\n      (param) => (queryString = queryString.concat(`&${param[0]}=${param[1]}`)),\n    );\n  }\n  return fetch(queryString, getFetchConfig(query))\n    .then((response) => handleResponse<MiddlewareResponse<Thread[]>>(response))\n    .then((json) => json.response)\n    .catch((error) => handleError(query.component_id, error));\n};\n\nexport function fetchThreadCount(query: MailboxQuery): Promise<number> {\n  let queryString = `${getMiddlewareApiUrl(\n    query.component_id,\n  )}/threads?view=expanded&not_in=trash&view=count`;\n  if (query.query) {\n    Object.entries(query.query).forEach(\n      (param) => (queryString = queryString.concat(`&${param[0]}=${param[1]}`)),\n    );\n  }\n\n  if (query.keywordToSearch) {\n    queryString += `&q=${query.keywordToSearch}`;\n  }\n\n  return fetch(queryString, getFetchConfig(query))\n    .then((response) => handleResponse<MiddlewareResponse<any>>(response))\n    .then((json) => json.response.count);\n}\n\nexport const fetchSearchResultThreads = (\n  query: MailboxQuery,\n): Promise<Thread[]> => {\n  const queryString = `${getMiddlewareApiUrl(\n    query.component_id,\n  )}/threads/search?q=${query.keywordToSearch}&view=expanded`;\n\n  return fetch(queryString, getFetchConfig(query))\n    .then(async (response) =>\n      handleResponse<MiddlewareResponse<Thread[]>>(response),\n    )\n    .then((json) => json.response)\n    .catch((error) => handleError(query.component_id, error));\n};\n\nexport const fetchThread = async (\n  query: ConversationQuery,\n): Promise<Conversation> => {\n  const thread = await fetch(\n    `${getMiddlewareApiUrl(query.component_id)}/threads/${\n      query.thread_id\n    }?view=expanded`,\n    getFetchConfig({\n      component_id: query.component_id,\n      access_token: query.access_token,\n    }),\n  )\n    .then((response) =>\n      handleResponse<MiddlewareResponse<Conversation>>(response),\n    )\n    .then((json) => json.response)\n    .catch((error) => handleError(query.component_id, error));\n\n  return thread;\n};\n\nexport const updateThread = (\n  query: ConversationQuery,\n  updatedThread: Conversation,\n): Promise<Conversation> => {\n  // accepts unread, starred, folder_id + label_ids. developer.nylas.com/docs/api/#put/threads/id\n  return fetch(\n    `${getMiddlewareApiUrl(query.component_id)}/threads/${updatedThread.id}`,\n    getFetchConfig({\n      method: \"PUT\",\n      component_id: query.component_id,\n      access_token: query.access_token,\n      body: {\n        unread: updatedThread.unread,\n        starred: updatedThread.starred,\n        folder_id: updatedThread.folder_id,\n        label_ids: updatedThread.label_ids,\n      },\n    }),\n  )\n    .then((response) =>\n      handleResponse<MiddlewareResponse<Conversation>>(response),\n    )\n    .then((json) => json.response)\n    .catch((error) => handleError(query.component_id, error));\n};\n","import {\n  getFetchConfig,\n  handleError,\n  handleResponse,\n  getMiddlewareApiUrl,\n} from \"../methods/api\";\nimport type { Manifest, MiddlewareResponse } from \"@commons/types/Nylas\";\n\nexport const fetchManifest = async (\n  id: string,\n  access_token?: string,\n): Promise<Manifest> => {\n  return await fetch(\n    `${getMiddlewareApiUrl(id)}/manifest`,\n    getFetchConfig({\n      access_token,\n      component_id: id,\n    }),\n  )\n    .then<MiddlewareResponse>(handleResponse)\n    .then((response) => response.component.theming)\n    .catch((error) => handleError(id, error));\n};\n\n// Allows <nylas-schedule-editor> to modify its own properties\n\nexport const saveManifest = async (\n  id: string,\n  manifest: Manifest,\n  access_token?: string,\n): Promise<Manifest> => {\n  return fetch(\n    `${getMiddlewareApiUrl(id)}/component`,\n    getFetchConfig({\n      method: \"PUT\",\n      component_id: id,\n      access_token,\n      body: { settings: manifest },\n    }),\n  )\n    .then((response) => handleResponse<MiddlewareResponse<Manifest>>(response))\n    .then((json) => {\n      return json.response;\n    });\n};\n","import { MessageStore } from \"../store/messages\";\nimport {\n  getFetchConfig,\n  handleError,\n  handleResponse,\n  getMiddlewareApiUrl,\n} from \"../methods/api\";\nimport type {\n  SingularEmail,\n  CommonQuery,\n  MessagesQuery,\n  File as NylasFile,\n  Message as NylasMessage,\n  MiddlewareResponse,\n} from \"@commons/types/Nylas\";\nimport type { Message } from \"@commons/types/Composer\";\n\nexport const sendMessage = async (\n  component_id: string,\n  msg: Message,\n  access_token?: string,\n): Promise<NylasMessage> => {\n  return await fetch(\n    `${getMiddlewareApiUrl(component_id)}/send`,\n    getFetchConfig({ method: \"POST\", component_id, access_token, body: msg }),\n  )\n    .then((response) =>\n      handleResponse<MiddlewareResponse<NylasMessage>>(response),\n    )\n    .then((json) => {\n      return json.response;\n    })\n    .catch((error) => handleError(component_id, error));\n};\n\nexport const uploadFile = async (\n  component_id: string,\n  file: File,\n  access_token?: string,\n): Promise<NylasFile> => {\n  const fetchConfig: RequestInit = getFetchConfig({\n    method: \"POST\",\n    component_id,\n    access_token,\n  });\n  const form = new FormData();\n  form.append(\"file\", file);\n  if (\n    typeof fetchConfig.headers !== \"undefined\" &&\n    \"Content-Type\" in fetchConfig.headers\n  ) {\n    delete fetchConfig.headers[\"Content-Type\"];\n  }\n  fetchConfig.body = form;\n  return await fetch(`${getMiddlewareApiUrl(component_id)}/files`, fetchConfig)\n    .then((response) => handleResponse<MiddlewareResponse<NylasFile>>(response))\n    .then((json) => {\n      return Array.isArray(json.response) ? json.response[0] : json.response;\n    })\n    .catch(handleError.bind(0, component_id));\n};\n\nexport const fetchMessages = async (\n  query: MessagesQuery,\n  offset: number,\n  limit: number,\n): Promise<NylasMessage[]> => {\n  let queryString = `${getMiddlewareApiUrl(\n    query.component_id,\n  )}/messages?offset=${offset}&limit=${limit}`;\n  if (query.received_before) {\n    queryString = `${queryString}&received_before=${query.received_before}`;\n  }\n  if (query.received_after) {\n    queryString = `${queryString}&received_after=${query.received_after}`;\n  }\n  return await fetch(queryString, getFetchConfig(query))\n    .then((response) =>\n      handleResponse<MiddlewareResponse<NylasMessage[]>>(response),\n    )\n    .then((json) => {\n      MessageStore.addMessages({\n        queryKey: JSON.stringify(query),\n        data: json.response,\n      });\n      return json.response;\n    })\n    .catch((error) => handleError(query.component_id, error));\n};\n\nexport const fetchMessage = async (\n  query: CommonQuery,\n  messageID: string,\n): Promise<NylasMessage> => {\n  const queryString = `${getMiddlewareApiUrl(\n    query.component_id,\n  )}/messages/${messageID}`;\n  return await fetch(queryString, getFetchConfig(query))\n    .then((response) =>\n      handleResponse<MiddlewareResponse<NylasMessage>>(response),\n    )\n    .then((json) => {\n      return json.response;\n    })\n    .catch((error) => handleError(query.component_id, error));\n};\n\n// For cases when someone wants to show just a single email message, rather than the full thread and w/o passing a thread id\nexport const fetchEmail = async (\n  query: SingularEmail,\n): Promise<NylasMessage> => {\n  const queryString = `${getMiddlewareApiUrl(query.component_id)}/messages/${\n    query.message_id\n  }`;\n  return await fetch(queryString, getFetchConfig(query))\n    .then((response) =>\n      handleResponse<MiddlewareResponse<NylasMessage>>(response),\n    )\n    .then((json) => {\n      return json.response;\n    })\n    .catch((error) => handleError(query.component_id, error));\n};\n","import {\n  getFetchConfig,\n  handleError,\n  handleResponse,\n  getMiddlewareApiUrl,\n} from \"../methods/api\";\nimport type {\n  AccountQuery,\n  Account,\n  MiddlewareResponse,\n} from \"@commons/types/Nylas\";\n\nexport const fetchAccount = async (query: AccountQuery): Promise<Account> => {\n  const account = await fetch(\n    `${getMiddlewareApiUrl(query.component_id)}/account`,\n    getFetchConfig(query),\n  )\n    .then((response) => handleResponse<MiddlewareResponse<Account>>(response))\n    .then((json) => {\n      return json.response;\n    })\n    .catch((error) => handleError(query.component_id, error));\n\n  return account;\n};\n","import {\n  getFetchConfig,\n  handleError,\n  handleResponse,\n  getMiddlewareApiUrl,\n} from \"../methods/api\";\nimport type {\n  CleanConversationQuery,\n  Message,\n  CleanConversationFeedbackQuery,\n  MiddlewareResponse,\n} from \"@commons/types/Nylas\";\n\nexport const fetchCleanConversations = (\n  query: CleanConversationQuery,\n): Promise<Message[]> => {\n  return fetch(\n    `${getMiddlewareApiUrl(query.component_id)}/neural/conversation`,\n    getFetchConfig({\n      method: \"PUT\",\n      access_token: query.access_token,\n      component_id: query.component_id,\n      body: { message_id: query.message_id },\n    }),\n  )\n    .then(async (apiResponse) => {\n      const json = await handleResponse<MiddlewareResponse<Message[]>>(\n        apiResponse,\n      );\n      return json.response;\n    })\n    .catch((error) => handleError(query.component_id, error));\n};\n\nexport const sendCleanConversationFeedback = (\n  query: CleanConversationFeedbackQuery,\n): Promise<Message> => {\n  return fetch(\n    `${getMiddlewareApiUrl(query.component_id)}/neural/conversation/feedback`,\n    getFetchConfig({\n      method: \"POST\",\n      access_token: query.access_token,\n      component_id: query.component_id,\n      body: { message_id: query.message_id },\n    }),\n  )\n    .then((response) => handleResponse<MiddlewareResponse<Message>>(response))\n    .then((json) => {\n      return json.response;\n    })\n    .catch((error) => handleError(query.component_id, error));\n};\n","import {\n  getFetchConfig,\n  handleError,\n  handleResponse,\n  getMiddlewareApiUrl,\n} from \"../methods/api\";\nimport type {\n  ConsecutiveAvailabilityQuery,\n  AvailabilityQuery,\n  AvailabilityResponse,\n  FreeBusyResponse,\n  PreDatedTimeSlot,\n} from \"@commons/types/Availability\";\nimport type { MiddlewareResponse } from \"@commons/types/Nylas\";\nimport type { EventDefinition } from \"@commons/types/ScheduleEditor\";\nimport type { ConsecutiveEvent } from \"@commonstypes/Scheduler\";\n\n// TODO: deprecate if we find /calendars/availability to be fully sufficient\nexport const fetchFreeBusy = async (\n  query: AvailabilityQuery,\n): Promise<FreeBusyResponse[]> => {\n  return fetch(\n    `${getMiddlewareApiUrl(query.component_id)}/calendars/free-busy`,\n    getFetchConfig({\n      method: \"POST\",\n      component_id: query.component_id,\n      access_token: query.access_token,\n      body: query.body,\n    }),\n  )\n    .then(async (apiResponse) => {\n      const json = await handleResponse<MiddlewareResponse<FreeBusyResponse[]>>(\n        apiResponse,\n      );\n      return json.response;\n    })\n    .catch((error) => handleError(query.component_id, error));\n};\n\nexport const fetchAvailability = async (\n  query: AvailabilityQuery,\n): Promise<AvailabilityResponse> => {\n  return fetch(\n    `${getMiddlewareApiUrl(query.component_id)}/calendars/availability`,\n    getFetchConfig({\n      method: \"POST\",\n      component_id: query.component_id,\n      access_token: query.access_token,\n      body: query.body,\n    }),\n  )\n    .then(async (apiResponse) => {\n      const json = await handleResponse<\n        MiddlewareResponse<AvailabilityResponse>\n      >(apiResponse);\n      // Normalize response .start and .end to .start_time and .end_time to make up for discrependcy in the Nylas API: https://developer.nylas.com/docs/connectivity/calendar/calendar-availability/#availability-response\n      // API story: https://app.shortcut.com/nylas/story/73196/\n      json.response.time_slots = json.response.time_slots.map((slot) => {\n        slot.start_time = slot.start || 0;\n        slot.end_time = slot.end || 0;\n        delete slot.start;\n        delete slot.end;\n        return slot;\n      });\n      return json.response;\n    })\n    .catch((error) => handleError(query.component_id, error));\n};\n\nexport const fetchConsecutiveAvailability = async (\n  query: ConsecutiveAvailabilityQuery,\n): Promise<ConsecutiveEvent[][]> => {\n  return fetch(\n    `${getMiddlewareApiUrl(\n      query.component_id,\n    )}/calendars/availability/consecutive`,\n    getFetchConfig({\n      method: \"POST\",\n      component_id: query.component_id,\n      access_token: query.access_token,\n      body: query.body,\n    }),\n  )\n    .then(async (apiResponse): Promise<ConsecutiveEvent[][]> => {\n      const json = await handleResponse<\n        MiddlewareResponse<PreDatedTimeSlot[][]>\n      >(apiResponse);\n      let response: PreDatedTimeSlot[][] =\n        json.response?.map((blockSlot) => {\n          blockSlot = blockSlot.map((slot: any) => {\n            slot.start_time = new Date(slot.start_time * 1000);\n            slot.end_time = new Date(slot.end_time * 1000);\n            return slot;\n          });\n          return blockSlot;\n        }) || [];\n      const hydratedResponse = hydrateSlotsToEvents(\n        response,\n        query.body.events,\n      );\n      const dedupedResponse =\n        removeSimultaneousAvailabilityOptions(hydratedResponse);\n      return dedupedResponse;\n    })\n    .catch((error) => handleError(query.component_id, error));\n};\n\n// Doing the best we can with what we've got: /calendars/availability/consecutive doesn't return any info other than emails\n// and start/end times. This means that if we have to events (EventDefinitions) with the same email addresses? We're shooting in the dark about which is which.\n// TODO: allow for an indicator on the API side\nfunction hydrateSlotsToEvents(\n  availabilities: PreDatedTimeSlot[][],\n  events: EventDefinition[],\n): ConsecutiveEvent[][] {\n  return availabilities.map((block) => {\n    return block.map((subevent) => {\n      return {\n        ...subevent,\n        ...events.find(\n          (eventdef) =>\n            eventdef.participantEmails.length === subevent.emails.length &&\n            eventdef.participantEmails.every((email) =>\n              subevent.emails.includes(email),\n            ),\n        ),\n      };\n    });\n  }) as any[][]; // TODO: How to best coerce PreDatedTimeSlot[][] to ConsecutiveEvent[][]? spread-combined return handles it.\n}\n\n// We don't want to overburden our users with too much sweet horrible freedom of choice;\n// the /calendars/availability/consecutive endpoint returns order permutations with same time slots;\n// Cull them down to just the first that exists per timeslot.\nfunction removeSimultaneousAvailabilityOptions(\n  availabilities: ConsecutiveEvent[][],\n) {\n  const blockSet = new Set();\n  return availabilities.filter((block) => {\n    const blockString = `${block[0].start_time}_${\n      block[block.length - 1].end_time\n    }`;\n    if (blockSet.has(blockString)) {\n      return false;\n    } else {\n      blockSet.add(blockString);\n      return true;\n    }\n  });\n}\n","import { Writable, writable } from \"svelte/store\";\nimport { fetchAvailability } from \"../connections/availability\";\nimport type {\n  AvailabilityQuery,\n  AvailabilityResponse,\n} from \"@commons/types/Availability\";\n\ntype AvailabilityStore = Record<string, Promise<AvailabilityResponse>>;\n\nfunction initialize(): Writable<AvailabilityStore> {\n  const get = (\n    target: AvailabilityStore,\n    key: string,\n  ): Promise<AvailabilityResponse> | void => {\n    const accessor: AvailabilityQuery = JSON.parse(key);\n    // Avoid saving forceReload property as part of store key\n    const accessorCopy = { ...accessor };\n    delete accessorCopy.forceReload;\n    key = JSON.stringify(accessorCopy);\n\n    if (\n      !accessor.component_id ||\n      !accessor?.body?.start_time ||\n      !accessor?.body?.end_time\n    ) {\n      return;\n    }\n\n    if (!target[key] || accessor.forceReload) {\n      const fetchPromise = fetchAvailability(accessor);\n      store.update((store) => {\n        store[key] = fetchPromise;\n        return store;\n      });\n      target[key] = fetchPromise;\n    }\n    return target[key];\n  };\n  const store = writable(new Proxy<AvailabilityStore>({}, { get }));\n  return store;\n}\n\nexport const AvailabilityStore = initialize();\n","import { Writable, writable } from \"svelte/store\";\nimport { fetchConsecutiveAvailability } from \"../connections/availability\";\nimport type {\n  AvailabilityQuery,\n  ConsecutiveAvailabilityQuery,\n  TimeSlot,\n} from \"@commons/types/Availability\";\nimport type { ConsecutiveEvent } from \"@commonstypes/Scheduler\";\n\ntype ConsecutiveAvailabilityStore = Record<\n  string,\n  Promise<ConsecutiveEvent[][]>\n>;\n\nfunction initialize(): Writable<ConsecutiveAvailabilityStore> {\n  const get = (\n    target: ConsecutiveAvailabilityStore,\n    key: string,\n  ): Promise<ConsecutiveEvent[][]> | void => {\n    const accessor: ConsecutiveAvailabilityQuery = JSON.parse(key);\n    // Avoid saving forceReload property as part of store key\n    const accessorCopy = { ...accessor };\n    delete accessorCopy.forceReload;\n    key = JSON.stringify(accessorCopy);\n\n    if (\n      !accessor.component_id ||\n      !accessor?.body?.start_time ||\n      !accessor?.body?.end_time\n    ) {\n      return;\n    }\n\n    if (!target[key] || accessor.forceReload) {\n      const fetchPromise = fetchConsecutiveAvailability(accessor);\n      store.update((store) => {\n        store[key] = fetchPromise;\n        return store;\n      });\n      target[key] = fetchPromise;\n    }\n    return target[key];\n  };\n  const store = writable(new Proxy<ConsecutiveAvailabilityStore>({}, { get }));\n  return store;\n}\n\nexport const ConsecutiveAvailabilityStore = initialize();\n","import { writable } from \"svelte/store\";\nimport {\n  fetchContacts,\n  fetchContactsByQuery,\n} from \"@commons/connections/contacts\";\nimport type {\n  Contact,\n  ContactEmail,\n  ContactSearchQuery,\n  ContactsQuery,\n} from \"@commons/types/Contacts\";\n\nlet contactsMap: Record<string, Contact[]> = {};\n\nfunction filterContacts(contacts: Contact[]) {\n  return contacts\n    .filter(\n      (contact) =>\n        !!contact.given_name ||\n        !!contact.surname ||\n        (Array.isArray(contact.emails) && contact.emails.length > 0),\n    )\n    .map((contact) => {\n      // Ensure each contact has at least one \"email\" to load\n      if (!Array.isArray(contact.emails) || contact.emails.length === 0) {\n        contact.emails = [{ email: \"\" } as ContactEmail];\n      }\n\n      return contact;\n    });\n}\n\nfunction initializeContacts() {\n  const { subscribe, set, update } = writable<Record<string, Contact[]>>({});\n  return {\n    subscribe,\n    addContacts: async (\n      query: ContactsQuery,\n      offset: number,\n      limit: number,\n    ) => {\n      const queryKey = JSON.stringify(query);\n      if (\n        !contactsMap[queryKey] &&\n        (query.component_id || query.access_token)\n      ) {\n        if (offset === 0) {\n          // Ensure the store is empty if our offset is 0\n          ContactStore.reset();\n        }\n\n        const contacts =\n          (await fetchContacts(query, offset, limit)\n            .then((contacts) => filterContacts(contacts))\n            .catch(() => [])) ?? [];\n\n        contactsMap[queryKey] = contactsMap[queryKey]\n          ? [...contactsMap[queryKey], ...contacts]\n          : contacts;\n\n        update((contacts) => {\n          contacts[queryKey] = contactsMap[queryKey];\n          return { ...contacts };\n        });\n        return contactsMap[queryKey];\n      }\n    },\n    addContact: async (query: ContactSearchQuery) => {\n      const queryKey = JSON.stringify(query);\n      if (\n        !contactsMap[queryKey] &&\n        (query.component_id || query.access_token)\n      ) {\n        const contacts =\n          (await fetchContactsByQuery(query)\n            .then((contacts) => filterContacts(contacts))\n            .catch(() => [])) ?? [];\n\n        contactsMap[queryKey] = contactsMap[queryKey]\n          ? [...contactsMap[queryKey], ...contacts]\n          : contacts;\n        update((contacts) => {\n          contacts[queryKey] = contactsMap[queryKey];\n          return { ...contacts };\n        });\n      }\n      return contactsMap[queryKey];\n    },\n    reset: () => {\n      contactsMap = {};\n      set({});\n    },\n  };\n}\n\nexport const ContactStore = initializeContacts();\n","import { writable } from \"svelte/store\";\nimport { fetchContactImage } from \"@commons/connections/contacts\";\nimport type { ContactsQuery } from \"@commons/types/Contacts\";\n\nconst contactAvatarMap: Record<string, string> = {};\n\nfunction initializeContactAvatars() {\n  const { subscribe, set } = writable<Record<string, string>>({});\n  return {\n    subscribe,\n    getContactAvatar: async (\n      query: ContactsQuery,\n      contact_id: string,\n      refresh = false,\n    ) => {\n      if (!contactAvatarMap[contact_id] || refresh) {\n        const avatar = await fetchContactImage(query, contact_id)\n          .then((res) => res)\n          .catch(() => \"\");\n        if (avatar) {\n          contactAvatarMap[contact_id] = avatar;\n        }\n      }\n      return contactAvatarMap[contact_id];\n    },\n    reset: () => set({}),\n  };\n}\n\nexport const ContactAvatarStore = initializeContactAvatars();\n","import { derived, Readable, writable } from \"svelte/store\";\nimport {\n  fetchThreads,\n  fetchSearchResultThreads,\n  updateThread,\n  fetchThreadCount,\n} from \"../connections/threads\";\nimport type {\n  Thread,\n  MailboxQuery,\n  ConversationQuery,\n  Message,\n  Conversation,\n} from \"@commons/types/Nylas\";\nimport { silence } from \"@commons\";\n\ninterface PaginatedThreads {\n  isLoaded: boolean;\n  threads: Thread[];\n}\n\nasync function initializePaginatedThreads(totalPages: number) {\n  const paginatedThreads = [];\n\n  for (let i = 0; i < totalPages; i++) {\n    paginatedThreads.push({\n      isLoaded: false,\n      threads: [],\n    });\n  }\n  return paginatedThreads;\n}\n\nfunction initializeThreads() {\n  const { subscribe, set, update } = writable<\n    Record<string, PaginatedThreads[]>\n  >({});\n  let threadsMap: Record<string, PaginatedThreads[]> = {};\n  let totalItems: number;\n\n  return {\n    subscribe,\n    set,\n    getThreads: async (\n      query: MailboxQuery,\n      currentPage: number,\n      pageSize: number,\n      forceRefresh = false,\n    ) => {\n      const queryKey = JSON.stringify(query);\n\n      if (!query.component_id && !query.access_token) {\n        return [];\n      }\n\n      if (totalItems === undefined || forceRefresh) {\n        const threadCount = await fetchThreadCount(query).catch(silence);\n\n        if (threadCount) {\n          totalItems = threadCount;\n        }\n      }\n\n      if (!Array.isArray(threadsMap[queryKey]) || forceRefresh) {\n        const totalPages = Math.ceil(totalItems / pageSize);\n        threadsMap[queryKey] = await initializePaginatedThreads(totalPages);\n      }\n\n      if (typeof threadsMap[queryKey][currentPage] === \"undefined\") {\n        return [];\n      } else if (!threadsMap[queryKey][currentPage].isLoaded) {\n        const threads = await fetchThreads(\n          query,\n          pageSize,\n          currentPage * pageSize,\n        ).catch(silence);\n\n        if (threads) {\n          threadsMap[queryKey][currentPage].threads = threads;\n          threadsMap[queryKey][currentPage].isLoaded = true;\n        }\n      }\n\n      update((threads) => {\n        threads[queryKey] = threadsMap[queryKey];\n        return { ...threads };\n      });\n\n      return threadsMap[queryKey][currentPage].threads;\n    },\n    getNumberOfItems: async (query: MailboxQuery) => {\n      if (!query.component_id && !query.access_token) {\n        return 0;\n      }\n\n      if (typeof totalItems === \"undefined\") {\n        const threadCount = await fetchThreadCount(query).catch(silence);\n\n        if (threadCount) {\n          totalItems = threadCount;\n        }\n      }\n      return totalItems;\n    },\n    // TODO - Use real pagination when search endpoint supports it\n    getThreadsWithSearchKeyword: async (\n      query: MailboxQuery,\n      forceRefresh = false,\n    ) => {\n      if (!query.component_id && !query.access_token) {\n        return [];\n      }\n      const queryKey = JSON.stringify(query);\n\n      if (!Array.isArray(threadsMap[queryKey]) || forceRefresh) {\n        threadsMap[queryKey] = await initializePaginatedThreads(1);\n      }\n\n      if (!threadsMap[queryKey][0].isLoaded || forceRefresh) {\n        const searchResultThreads = await fetchSearchResultThreads(query).catch(\n          silence,\n        );\n\n        if (searchResultThreads) {\n          threadsMap[queryKey][0].threads = searchResultThreads;\n          threadsMap[queryKey][0].isLoaded = true;\n        }\n      }\n      update((threads) => {\n        threads[queryKey] = threadsMap[queryKey];\n        return { ...threads };\n      });\n      return threadsMap[queryKey][0].threads;\n    },\n    updateThread: async (\n      threadQuery: ConversationQuery,\n      queryKey: string,\n      updatedThread: Conversation,\n      currentPage: number,\n      pageSize: number,\n    ) => {\n      const thread = await updateThread(threadQuery, updatedThread).catch(\n        silence,\n      );\n\n      if (!threadsMap[queryKey][currentPage].isLoaded) {\n        const threads = await fetchThreads(\n          JSON.parse(queryKey),\n          pageSize,\n          currentPage * pageSize,\n        ).catch(silence);\n\n        if (threads) {\n          threadsMap[queryKey][currentPage].threads = threads;\n          threadsMap[queryKey][currentPage].isLoaded = true;\n        }\n      }\n\n      threadsMap[queryKey][currentPage].threads = threadsMap[queryKey][\n        currentPage\n      ].threads.map((initialThread) => {\n        if (thread && initialThread.id === thread.id) {\n          initialThread = Object.assign(initialThread, thread);\n        }\n        return initialThread;\n      });\n      update((threads) => {\n        threads[queryKey] = threadsMap[queryKey];\n        return { ...threads };\n      });\n      return threadsMap[queryKey][currentPage].threads;\n    },\n    updateThreadSelection: (\n      queryKey: string,\n      currentPage: number,\n      threadId?: string,\n    ) => {\n      const threads = threadsMap[queryKey][currentPage].threads;\n\n      if (!threadId) {\n        const selectionState = threads.some((thread) => thread.selected);\n        for (const thread of threads) {\n          thread.selected = !selectionState;\n        }\n      } else {\n        const thread = threads.find((thread) => thread.id === threadId);\n        if (thread) {\n          thread.selected = !thread.selected;\n        }\n      }\n      update((threads) => {\n        threads[queryKey] = threadsMap[queryKey];\n        return { ...threads };\n      });\n      return threadsMap[queryKey][currentPage].threads;\n    },\n\n    reset: () => {\n      threadsMap = {};\n      set({});\n    },\n\n    hydrateMessageInThread: (\n      incomingMessage: Message,\n      query: MailboxQuery,\n      currentPage: number,\n    ) => {\n      const queryKey = JSON.stringify(query);\n\n      const foundThread = threadsMap[queryKey][currentPage]?.threads?.find(\n        (thread) => thread.id === incomingMessage.thread_id,\n      );\n      if (foundThread) {\n        const foundMessage = foundThread.messages?.find(\n          (message) => message.id === incomingMessage.id,\n        );\n        if (foundMessage) {\n          foundMessage.body = incomingMessage.body;\n          update((threads) => {\n            if (incomingMessage.thread_id) {\n              let threadToUpdate = threads[queryKey][currentPage].threads.find(\n                (thread) => thread.id === foundThread.id,\n              );\n\n              if (threadToUpdate) {\n                threadToUpdate = JSON.parse(JSON.stringify(foundThread));\n              }\n            }\n            return { ...threads };\n          });\n        }\n      }\n\n      return threadsMap[queryKey][currentPage].threads;\n    },\n  };\n}\n\nexport const MailboxStore = initializeThreads();\n\nexport const EmailStore: Readable<Record<string, Thread[]>> = derived(\n  MailboxStore,\n  ($MailboxStore) => {\n    const emailStore: Record<string, Thread[]> = {};\n    Object.entries($MailboxStore).forEach(\n      ([key, paginatedThreads]) =>\n        (emailStore[key] = paginatedThreads\n          .map((paginatedThread) => paginatedThread.threads)\n          .flat()),\n    );\n    return emailStore;\n  },\n);\n","import { fetchManifest } from \"../connections/manifest\";\nimport { Writable, writable } from \"svelte/store\";\nimport type { Manifest } from \"@commons/types/Nylas\";\n\ntype ManifestAccessor = {\n  component_id: string;\n  access_token?: string;\n  external_manifest_ids?: [];\n};\ntype ManifestStore = Record<string, Promise<Manifest>>;\n\nfunction initialize(): Writable<ManifestStore> {\n  const get = (\n    target: ManifestStore,\n    key: string,\n  ): Promise<Manifest> | void => {\n    const accessor: ManifestAccessor = JSON.parse(key);\n\n    if (!accessor.component_id) return;\n\n    if (!target[key]) {\n      const fetchPromise = fetchManifest(\n        accessor.component_id,\n        accessor.access_token,\n      );\n      store.update((store) => {\n        store[key] = fetchPromise;\n        return store;\n      });\n      target[key] = fetchPromise;\n    }\n    return target[key];\n  };\n  const store = writable(new Proxy<ManifestStore>({}, { get }));\n  return store;\n}\n\nexport const ManifestStore = initialize();\n","import {\n  getFetchConfig,\n  handleError,\n  handleResponse,\n  getMiddlewareApiUrl,\n} from \"../methods/api\";\nimport type { FileQuery, MiddlewareResponse } from \"@commons/types/Nylas\";\n\nexport const downloadFile = async (query: FileQuery): Promise<string> => {\n  let queryString = `${getMiddlewareApiUrl(query.component_id)}/files/${\n    query.file_id\n  }/download`;\n\n  return await fetch(queryString, getFetchConfig(query))\n    .then((response) => handleResponse<MiddlewareResponse<string>>(response))\n    .then((json) => json.response)\n    .catch((error) => handleError(query.component_id, error));\n};\n","import { writable } from \"svelte/store\";\nimport type { File, Message } from \"@commons/types/Nylas\";\nimport { downloadFile } from \"@commons/connections/files\";\n\nfunction initializeFilesForMessage() {\n  const { subscribe, set, update } = writable<\n    Record<string, Record<string, File>>\n  >({});\n  const filesMap: Record<string, Record<string, File>> = {}; // {message_id: {file_id: Base64 String}}\n\n  return {\n    subscribe,\n    getFilesForMessage: async (\n      incomingMessage: Message,\n      query: { component_id: string; access_token: string },\n    ) => {\n      if (!filesMap[incomingMessage.id]) {\n        const inlineFiles: Record<string, File> = {};\n        for (const file of incomingMessage.files.values()) {\n          // treat all files with content_id as inline\n          if (\n            (file.content_disposition === \"inline\" || file.content_id) &&\n            !inlineFiles[file.id]\n          ) {\n            inlineFiles[file.id] = file;\n            inlineFiles[file.id].data = await downloadFile({\n              file_id: file.id,\n              component_id: query.component_id,\n              access_token: query.access_token,\n            });\n          }\n        }\n        filesMap[incomingMessage.id] = inlineFiles;\n        update((files) => {\n          files[incomingMessage.id] = inlineFiles;\n          return { ...files };\n        });\n      }\n      return filesMap[incomingMessage.id];\n    },\n    hasInlineFiles: (incomingMessage: Message): boolean => {\n      return incomingMessage?.files?.some(\n        (file) => file.content_disposition === \"inline\" || file.content_id,\n      );\n    },\n    reset: () => set({}),\n  };\n}\n\nexport const FilesStore = initializeFilesForMessage();\n","import type { File, Manifest } from \"@commons/types/Nylas\";\n\nexport function getEventDispatcher(component: {\n  dispatchEvent?: (e: Event) => boolean;\n}) {\n  return (name: string, detail: unknown): void => {\n    if (component.dispatchEvent) {\n      component.dispatchEvent(\n        new CustomEvent(name, {\n          detail,\n          composed: true, // propagate across the shadow DOM\n        }),\n      );\n    }\n  };\n}\n\nexport function debounce(\n  fn: (args: unknown) => unknown,\n  time: number,\n): () => void {\n  let timeoutId: ReturnType<typeof setTimeout>;\n  return (): void => {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n\n    timeoutId = setTimeout(fn, time);\n  };\n}\n\nexport function buildInternalProps<T extends Partial<Manifest>>(\n  properties: T,\n  manifest: T,\n  defaultValueMap: T,\n): T {\n  return new Proxy(properties, {\n    get: (target, name: keyof Manifest | \"toJSON\" | \"toString\") => {\n      if (name === \"toString\" || name === \"toJSON\") {\n        return () => JSON.stringify(target);\n      }\n\n      if (Reflect.get(target, name) !== undefined) {\n        return getPropertyValue(\n          Reflect.get(target, name),\n          defaultValueMap[name],\n        );\n      }\n\n      if (manifest && name in manifest) {\n        return getPropertyValue(manifest[name], defaultValueMap[name]);\n      }\n      return defaultValueMap[name];\n    },\n\n    ownKeys: (target) => {\n      const keys = new Set([\n        ...Reflect.ownKeys(target),\n        ...Object.keys(manifest),\n        ...Object.keys(defaultValueMap),\n      ]);\n      return Array.from(keys);\n    },\n\n    getOwnPropertyDescriptor: (target, prop) => {\n      let propDescriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n      if (!propDescriptor) {\n        propDescriptor = (manifest &&\n          Object.getOwnPropertyDescriptor(manifest, prop)) ??\n          (defaultValueMap &&\n            Object.getOwnPropertyDescriptor(defaultValueMap, prop)) ?? {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n          };\n        Reflect.defineProperty(target, prop, propDescriptor);\n      }\n      return propDescriptor;\n    },\n  });\n}\n\nexport function getPropertyValue<T>(propValue: any, defaultTo: T): T {\n  if (propValue) {\n    if (typeof defaultTo === \"boolean\") {\n      return parseBoolean(propValue) as any;\n    }\n    if (typeof defaultTo === \"number\") {\n      return Number(propValue) as any;\n    }\n    if (defaultTo instanceof Date) {\n      return new Date(propValue) as any;\n    }\n  }\n\n  return propValue === undefined ? defaultTo ?? null : propValue;\n}\n\nexport function parseBoolean(\n  val: string | boolean | undefined | null,\n): boolean {\n  return (<any>[true, \"true\", \"1\"]).includes(val);\n}\n\nexport default function parseStringToArray(parseStr: string): string[] {\n  if (!parseStr) {\n    return [];\n  }\n\n  if (parseStr.includes(\",\")) {\n    return parseStr.split(\",\").map((s: string) => s.trim());\n  }\n  if (parseStr.includes(\" \")) {\n    return parseStr.split(\" \").map((s: string) => s.trim());\n  }\n  if (parseStr.includes(\"\\n\")) {\n    return parseStr.split(\"\\n\").map((s: string) => s.trim());\n  }\n\n  return [parseStr.trim()];\n}\n\nexport function downloadAttachedFile(fileData: string, file: File): void {\n  const buffer = Uint8Array.from(atob(fileData), (c) => c.charCodeAt(0));\n  const blob = new Blob([buffer], { type: file.content_type });\n  const blobFile = window.URL.createObjectURL(blob);\n\n  const a = document.createElement(\"a\");\n  a.href = blobFile;\n  a.download = file.filename ?? file.id;\n  a.target = \"_blank\";\n  a.click();\n  a.remove();\n}\n\nexport function arrayContainsArray(superset: any[], subset: any[]): boolean {\n  return subset.every((target) => superset.includes(target));\n}\n","<svelte:options tag=\"nylas-error\" immutable={true} />\n\n<script lang=\"ts\">\n  import { ErrorStore } from \"../store/error\";\n  import type { NError } from \"@commons/types/Nylas\";\n\n  export let id: string; // component id\n\n  let error: NError;\n  let errorName: string;\n\n  $: {\n    error = $ErrorStore[id] ?? { name: \"\" };\n    errorName = error.name ?? error.message?.name ?? \"\";\n  }\n\n  const isDevEnv =\n    window.location.href.includes(\"localhost\") ||\n    window.location.href.includes(\"127.0.0.1\");\n</script>\n\n<style>\n  .message-container {\n    background: #fff6f6;\n    border-radius: 5px;\n    box-shadow: 0 0 0 1px #aa92a0 inset, 0 0 0 0 transparent;\n    color: #9f3a38;\n    font-size: 1.25rem;\n    padding: 10px;\n    margin: 0 auto;\n    transition: opacity 500ms ease, color 500ms ease,\n      background-color 500ms ease, box-shadow 500ms ease,\n      -webkit-box-shadow 500ms ease;\n  }\n\n  .message-container *:focus {\n    outline: 5px auto Highlight;\n    outline: 5px auto -webkit-focus-ring-color;\n  }\n\n  .details {\n    color: #494949;\n    font-size: 0.75rem;\n    width: 100%;\n  }\n</style>\n\n{#if errorName && isDevEnv}\n  <div class=\"message-container\">\n    {#if errorName === \"HostDomainNotAllowedError\"}\n      <h3>\n        You are trying to access this component from&nbsp;\n        <code>{window.location.hostname}</code>. The component's settings do not\n        allow access from this domain.\n      </h3>\n      <h4>\n        The list of allowed domains can be modified in your&nbsp;\n        <a href=\"https://dashboard.nylas.com\">Dashboard</a>.\n      </h4>\n    {:else if errorName === \"IncompatibleProperties\"}\n      <h3>Your component properties do not work with each other.</h3>\n    {/if}\n    <span class=\"details\">Debug info:</span>\n    <textarea class=\"details\" readonly>\n      {errorName}: {id}\n      {error.message?.message ?? \"\"}\n    </textarea>\n  </div>\n{/if}\n","export enum AccountOrganizationUnit {\n  Label = \"label\",\n  Folder = \"folder\",\n}\n\nexport enum AccountSyncState {\n  RUNNING = \"running\",\n  PARTIAL = \"partial\",\n  STOPPED = \"stopped\",\n}\n\nexport enum MailboxActions {\n  SELECTALL = \"selectall\",\n  DELETE = \"delete\",\n  STAR = \"star\",\n  UNREAD = \"unread\",\n}\n","import {\n  getFetchConfig,\n  handleError,\n  handleResponse,\n  getMiddlewareApiUrl,\n} from \"../methods/api\";\nimport type {\n  CommonQuery,\n  MiddlewareResponse,\n  Folder,\n} from \"@commons/types/Nylas\";\n\nexport const fetchFolders = async (query: CommonQuery): Promise<Folder[]> => {\n  const queryString = `${getMiddlewareApiUrl(query.component_id)}/folders`;\n  return await fetch(queryString, getFetchConfig(query))\n    .then((response) => handleResponse<MiddlewareResponse<Folder[]>>(response))\n    .then((json) => {\n      return json.response;\n    })\n    .catch((error) => handleError(query.component_id, error));\n};\n","import { writable } from \"svelte/store\";\nimport type { CommonQuery, Folder, StoredFolders } from \"@commons/types/Nylas\";\nimport { fetchFolders } from \"@commons/connections/folders\";\n\nfunction initializeFolders() {\n  const { subscribe, set, update } = writable<Record<string, Folder[]>>({});\n  const foldersMap: Record<string, Folder[]> = {};\n\n  return {\n    subscribe,\n    getFolders: async (query: CommonQuery, forceRefresh = false) => {\n      const queryKey = JSON.stringify(query);\n      if (\n        (!foldersMap[queryKey] || forceRefresh) &&\n        (query.component_id || query.access_token)\n      ) {\n        foldersMap[queryKey] = (await fetchFolders(query)).map((folder) => {\n          folder.toString = () => folder.id;\n          return folder;\n        });\n      }\n      update((folders) => {\n        folders[queryKey] = foldersMap[queryKey];\n        return { ...folders };\n      });\n      return foldersMap[queryKey];\n    },\n    reset: () => set({}),\n  };\n}\n\nexport const FolderStore = initializeFolders();\n","import {\n  getFetchConfig,\n  handleError,\n  handleResponse,\n  getMiddlewareApiUrl,\n} from \"../methods/api\";\nimport type {\n  CommonQuery,\n  MiddlewareResponse,\n  Label,\n} from \"@commons/types/Nylas\";\n\nexport const fetchLabels = async (query: CommonQuery): Promise<Label[]> => {\n  const queryString = `${getMiddlewareApiUrl(query.component_id)}/labels`;\n  return await fetch(queryString, getFetchConfig(query))\n    .then((response) => handleResponse<MiddlewareResponse<Label[]>>(response))\n    .then((json) => {\n      return json.response;\n    })\n    .catch((error) => handleError(query.component_id, error));\n};\n","import { writable } from \"svelte/store\";\nimport type { CommonQuery, Label, StoredLabels } from \"@commons/types/Nylas\";\nimport { fetchLabels } from \"@commons/connections/labels\";\n\nfunction initializeLabels() {\n  const { subscribe, set, update } = writable<Record<string, Label[]>>({});\n  const labelsMap: Record<string, Label[]> = {};\n\n  return {\n    subscribe,\n    getLabels: async (query: CommonQuery, forceRefresh = false) => {\n      const queryKey = JSON.stringify(query);\n      if (\n        (!labelsMap[queryKey] || forceRefresh) &&\n        (query.component_id || query.access_token)\n      ) {\n        labelsMap[queryKey] = (await fetchLabels(query)).map((label) => {\n          label.toString = () => label.id;\n          return label;\n        });\n      }\n      update((labels) => {\n        labels[queryKey] = labelsMap[queryKey];\n        return { ...labels };\n      });\n      return labelsMap[queryKey];\n    },\n    reset: () => set({}),\n  };\n}\n\nexport const LabelStore = initializeLabels();\n","<svg width=\"17\" height=\"16\" viewBox=\"0 0 17 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M11.1666 6.66666L8.50094 9.48258L5.83331 6.66666\" stroke=\"#8d94a5\" stroke-miterlimit=\"10\"/>\n</svg>\n","<svg width=\"11\" height=\"13\" viewBox=\"0 0 11 13\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M0.75 11.375C0.75 12.0078 1.24219 12.5 1.875 12.5H8.625C9.23438 12.5 9.75 12.0078 9.75 11.375V3.5H0.75V11.375ZM7.125 5.375C7.125 5.1875 7.28906 5 7.5 5C7.6875 5 7.875 5.1875 7.875 5.375V10.625C7.875 10.8359 7.6875 11 7.5 11C7.28906 11 7.125 10.8359 7.125 10.625V5.375ZM4.875 5.375C4.875 5.1875 5.03906 5 5.25 5C5.4375 5 5.625 5.1875 5.625 5.375V10.625C5.625 10.8359 5.4375 11 5.25 11C5.03906 11 4.875 10.8359 4.875 10.625V5.375ZM2.625 5.375C2.625 5.1875 2.78906 5 3 5C3.1875 5 3.375 5.1875 3.375 5.375V10.625C3.375 10.8359 3.1875 11 3 11C2.78906 11 2.625 10.8359 2.625 10.625V5.375ZM10.125 1.25H7.3125L7.07812 0.828125C6.98438 0.640625 6.79688 0.5 6.58594 0.5H3.89062C3.67969 0.5 3.49219 0.640625 3.39844 0.828125L3.1875 1.25H0.375C0.164062 1.25 0 1.4375 0 1.625V2.375C0 2.58594 0.164062 2.75 0.375 2.75H10.125C10.3125 2.75 10.5 2.58594 10.5 2.375V1.625C10.5 1.4375 10.3125 1.25 10.125 1.25Z\" fill=\"#6A7285\"/>\n</svg>\n","<svg width=\"12\" height=\"13\" viewBox=\"0 0 12 13\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M4.125 5.5625H7.875C8.0625 5.5625 8.25 5.39844 8.25 5.1875V4.8125C8.25 4.625 8.0625 4.4375 7.875 4.4375H4.125C3.91406 4.4375 3.75 4.625 3.75 4.8125V5.1875C3.75 5.39844 3.91406 5.5625 4.125 5.5625ZM3.75 7.4375C3.75 7.64844 3.91406 7.8125 4.125 7.8125H7.875C8.0625 7.8125 8.25 7.64844 8.25 7.4375V7.0625C8.25 6.875 8.0625 6.6875 7.875 6.6875H4.125C3.91406 6.6875 3.75 6.875 3.75 7.0625V7.4375ZM6 10.2969C5.60156 10.2969 5.22656 10.1797 4.89844 9.92188L0 6.38281V11.375C0 12.0078 0.492188 12.5 1.125 12.5H10.875C11.4844 12.5 12 12.0078 12 11.375V6.38281L7.07812 9.92188C6.75 10.1797 6.375 10.2969 6 10.2969ZM11.5547 4.32031C11.3438 4.17969 11.1562 4.01562 10.875 3.80469V2.75C10.875 2.14062 10.3594 1.625 9.75 1.625H7.92188C7.85156 1.57812 7.78125 1.53125 7.71094 1.48438C7.3125 1.20312 6.53906 0.5 6 0.5C5.4375 0.5 4.66406 1.20312 4.26562 1.48438C4.19531 1.53125 4.125 1.57812 4.05469 1.625H2.25C1.61719 1.625 1.125 2.14062 1.125 2.75V3.80469C0.820312 4.01562 0.632812 4.17969 0.421875 4.32031C0.164062 4.53125 0 4.85938 0 5.21094V5.46875L2.25 7.08594V2.75H9.75V7.08594L12 5.46875V5.21094C12 4.85938 11.8359 4.55469 11.5547 4.32031Z\" fill=\"#6A7285\"/>\n</svg>\n","<svg width=\"12\" height=\"9\" viewBox=\"0 0 12 9\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M11.7656 2.97656C11.2266 3.39844 10.5469 3.91406 8.15625 5.64844C7.6875 6 6.82031 6.77344 6 6.77344C5.15625 6.77344 4.3125 6 3.82031 5.64844C1.42969 3.91406 0.75 3.39844 0.210938 2.97656C0.117188 2.90625 0 2.97656 0 3.09375V7.875C0 8.50781 0.492188 9 1.125 9H10.875C11.4844 9 12 8.50781 12 7.875V3.09375C12 2.97656 11.8594 2.90625 11.7656 2.97656ZM6 6C6.53906 6.02344 7.3125 5.32031 7.71094 5.03906C10.8281 2.78906 11.0625 2.57812 11.7656 2.01562C11.9062 1.92188 12 1.75781 12 1.57031V1.125C12 0.515625 11.4844 0 10.875 0H1.125C0.492188 0 0 0.515625 0 1.125V1.57031C0 1.75781 0.0703125 1.92188 0.210938 2.01562C0.914062 2.57812 1.14844 2.78906 4.26562 5.03906C4.66406 5.32031 5.4375 6.02344 6 6Z\" fill=\"#6A7285\"/>\n</svg>\n","<svg width=\"17\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n\t viewBox=\"0 0 511.36 511.36\" style=\"enable-background:new 0 0 511.36 511.36;\" xml:space=\"preserve\">\r\n<g>\r\n\t<g>\r\n\t\t<path d=\"M454.827,35.2c-46.933-46.933-122.027-46.933-168.96,0L63.147,258.773c-3.413,3.413-3.413,8.533,0,11.947\r\n\t\t\ts8.533,3.413,11.947,0l222.72-223.573c40.107-40.107,104.96-40.107,145.067,0c40.107,40.107,40.107,104.96,0,145.067\r\n\t\t\tL162.133,472.96c-28.16,28.16-74.24,28.16-102.4,0c-28.16-28.16-28.16-74.24,0-102.4l226.133-226.987\r\n\t\t\tc17.067-16.213,43.52-17.067,60.587,0c16.213,17.067,16.213,44.373,0,60.587l-168.96,169.813c-3.413,3.413-3.413,8.533,0,11.947\r\n\t\t\tc3.413,3.413,8.533,3.413,11.947,0L358.4,216.96c23.04-23.04,23.04-61.44,0-84.48c-23.04-23.04-61.44-23.04-84.48,0\r\n\t\t\tL47.787,358.613c-34.987,34.133-34.987,91.307,0,126.293c17.067,17.92,40.107,26.453,63.147,26.453\r\n\t\t\tc23.04,0,46.08-8.533,63.147-26.453L454.827,204.16c22.187-22.187,34.987-52.907,34.987-84.48\r\n\t\t\tC489.813,88.107,477.013,57.387,454.827,35.2z\"/>\r\n\t</g>\r\n</svg>\r\n","<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M11.7605 17.3029L6.32422 12.1494L11.7605 6.99968\" stroke=\"#161717\" stroke-width=\"1.5\" stroke-miterlimit=\"10\"/>\n<path d=\"M6.42791 12.1494L18 12.1494\" stroke=\"#161717\" stroke-width=\"1.5\" stroke-miterlimit=\"10\"/>\n</svg>\n","<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M10 2C14.4183 2 18 5.58172 18 10C18 14.4183 14.4183 18 10 18C5.58172 18 2 14.4183 2 10C2 5.58172 5.58172 2 10 2ZM10 3C6.13401 3 3 6.13401 3 10C3 13.866 6.13401 17 10 17C13.866 17 17 13.866 17 10C17 6.13401 13.866 3 10 3ZM10 12.5C10.4142 12.5 10.75 12.8358 10.75 13.25C10.75 13.6642 10.4142 14 10 14C9.58579 14 9.25 13.6642 9.25 13.25C9.25 12.8358 9.58579 12.5 10 12.5ZM10 6C10.2455 6 10.4496 6.17688 10.4919 6.41012L10.5 6.5V11C10.5 11.2761 10.2761 11.5 10 11.5C9.75454 11.5 9.55039 11.3231 9.50806 11.0899L9.5 11V6.5C9.5 6.22386 9.72386 6 10 6Z\" fill=\"white\"/>\n</svg>\n","<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M11.2452 0.817058C12.332 -0.269749 14.0941 -0.269749 15.1809 0.817058C16.2224 1.85858 16.2658 3.52026 15.3111 4.61346L15.1809 4.75273L5.57506 14.3586C5.36997 14.5636 5.12323 14.7212 4.85236 14.821L4.68708 14.8739L0.632111 15.9798C0.285522 16.0743 -0.0345414 15.7857 0.00300655 15.4452L0.0181704 15.3658L1.12407 11.3109C1.20039 11.031 1.33646 10.7718 1.52212 10.5508L1.63939 10.4229L11.2452 0.817058ZM10.385 3.09195L2.34649 11.13C2.2542 11.2223 2.18117 11.3314 2.13111 11.4511L2.08884 11.574L1.2122 14.7847L4.42397 13.9091C4.50791 13.8862 4.58815 13.8526 4.66278 13.8093L4.77028 13.7372L4.86796 13.6515L12.906 5.61295L10.385 3.09195ZM14.4738 1.52417C13.8162 0.866565 12.7727 0.830031 12.0722 1.41457L11.9523 1.52417L11.092 2.38495L13.613 4.90595L14.4738 4.04563C15.1314 3.38803 15.1679 2.34455 14.5834 1.64407L14.4738 1.52417Z\" fill=\"#ffffff\"/>\n</svg>\n","<svelte:options tag=\"nylas-contact-image\" />\n\n<script>\n  import { ContactAvatarStore } from \"@commons\";\n  import { beforeUpdate } from \"svelte/internal\";\n\n  export let contact;\n  export let contact_query;\n  export let height = \"32px\";\n  export let width = \"32px\";\n  $: image = null;\n\n  beforeUpdate(async () => {\n    if (contact && contact.picture_url) {\n      image = await ContactAvatarStore.getContactAvatar(\n        contact_query,\n        contact.id,\n      );\n    } else {\n      image = null;\n    }\n  });\n</script>\n\n{#if image}\n  <img\n    alt=\"\"\n    style=\"height: {height}; width: {width}; border-radius: 50%;\"\n    src=\"data:image/jpg;base64,{image}\"\n  />\n{:else if contact}\n  <p style=\"margin: 0;\">\n    {contact.given_name && contact.surname\n      ? contact.given_name.charAt(0) + contact.surname.charAt(0)\n      : contact.name\n      ? contact.name.charAt(0)\n      : contact.email\n      ? contact.email.charAt(0)\n      : \"?\"}\n  </p>\n{/if}\n","/*! @license DOMPurify 2.3.4 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/2.3.4/LICENSE */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.DOMPurify = factory());\n}(this, function () { 'use strict';\n\n  function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n  var hasOwnProperty = Object.hasOwnProperty,\n      setPrototypeOf = Object.setPrototypeOf,\n      isFrozen = Object.isFrozen,\n      getPrototypeOf = Object.getPrototypeOf,\n      getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n  var freeze = Object.freeze,\n      seal = Object.seal,\n      create = Object.create; // eslint-disable-line import/no-mutable-exports\n\n  var _ref = typeof Reflect !== 'undefined' && Reflect,\n      apply = _ref.apply,\n      construct = _ref.construct;\n\n  if (!apply) {\n    apply = function apply(fun, thisValue, args) {\n      return fun.apply(thisValue, args);\n    };\n  }\n\n  if (!freeze) {\n    freeze = function freeze(x) {\n      return x;\n    };\n  }\n\n  if (!seal) {\n    seal = function seal(x) {\n      return x;\n    };\n  }\n\n  if (!construct) {\n    construct = function construct(Func, args) {\n      return new (Function.prototype.bind.apply(Func, [null].concat(_toConsumableArray(args))))();\n    };\n  }\n\n  var arrayForEach = unapply(Array.prototype.forEach);\n  var arrayPop = unapply(Array.prototype.pop);\n  var arrayPush = unapply(Array.prototype.push);\n\n  var stringToLowerCase = unapply(String.prototype.toLowerCase);\n  var stringMatch = unapply(String.prototype.match);\n  var stringReplace = unapply(String.prototype.replace);\n  var stringIndexOf = unapply(String.prototype.indexOf);\n  var stringTrim = unapply(String.prototype.trim);\n\n  var regExpTest = unapply(RegExp.prototype.test);\n\n  var typeErrorCreate = unconstruct(TypeError);\n\n  function unapply(func) {\n    return function (thisArg) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return apply(func, thisArg, args);\n    };\n  }\n\n  function unconstruct(func) {\n    return function () {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return construct(func, args);\n    };\n  }\n\n  /* Add properties to a lookup table */\n  function addToSet(set, array) {\n    if (setPrototypeOf) {\n      // Make 'in' and truthy checks like Boolean(set.constructor)\n      // independent of any properties defined on Object.prototype.\n      // Prevent prototype setters from intercepting set as a this value.\n      setPrototypeOf(set, null);\n    }\n\n    var l = array.length;\n    while (l--) {\n      var element = array[l];\n      if (typeof element === 'string') {\n        var lcElement = stringToLowerCase(element);\n        if (lcElement !== element) {\n          // Config presets (e.g. tags.js, attrs.js) are immutable.\n          if (!isFrozen(array)) {\n            array[l] = lcElement;\n          }\n\n          element = lcElement;\n        }\n      }\n\n      set[element] = true;\n    }\n\n    return set;\n  }\n\n  /* Shallow clone an object */\n  function clone(object) {\n    var newObject = create(null);\n\n    var property = void 0;\n    for (property in object) {\n      if (apply(hasOwnProperty, object, [property])) {\n        newObject[property] = object[property];\n      }\n    }\n\n    return newObject;\n  }\n\n  /* IE10 doesn't support __lookupGetter__ so lets'\n   * simulate it. It also automatically checks\n   * if the prop is function or getter and behaves\n   * accordingly. */\n  function lookupGetter(object, prop) {\n    while (object !== null) {\n      var desc = getOwnPropertyDescriptor(object, prop);\n      if (desc) {\n        if (desc.get) {\n          return unapply(desc.get);\n        }\n\n        if (typeof desc.value === 'function') {\n          return unapply(desc.value);\n        }\n      }\n\n      object = getPrototypeOf(object);\n    }\n\n    function fallbackValue(element) {\n      console.warn('fallback value for', element);\n      return null;\n    }\n\n    return fallbackValue;\n  }\n\n  var html = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\n\n  // SVG\n  var svg = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\n\n  var svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n\n  // List of SVG elements that are disallowed by default.\n  // We still need to know them so that we can do namespace\n  // checks properly in case one wants to add them to\n  // allow-list.\n  var svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'fedropshadow', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\n\n  var mathMl = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover']);\n\n  // Similarly to SVG, we want to know all MathML elements,\n  // even those that we disallow by default.\n  var mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\n\n  var text = freeze(['#text']);\n\n  var html$1 = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns', 'slot']);\n\n  var svg$1 = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'targetx', 'targety', 'transform', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\n\n  var mathMl$1 = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\n\n  var xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n  // eslint-disable-next-line unicorn/better-regex\n  var MUSTACHE_EXPR = seal(/\\{\\{[\\s\\S]*|[\\s\\S]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\n  var ERB_EXPR = seal(/<%[\\s\\S]*|[\\s\\S]*%>/gm);\n  var DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\n  var ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\n  var IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n  );\n  var IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\n  var ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n  );\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n  function _toConsumableArray$1(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n  var getGlobal = function getGlobal() {\n    return typeof window === 'undefined' ? null : window;\n  };\n\n  /**\n   * Creates a no-op policy for internal use only.\n   * Don't export this function outside this module!\n   * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n   * @param {Document} document The document object (to determine policy name suffix)\n   * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n   * are not supported).\n   */\n  var _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, document) {\n    if ((typeof trustedTypes === 'undefined' ? 'undefined' : _typeof(trustedTypes)) !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n      return null;\n    }\n\n    // Allow the callers to control the unique policy name\n    // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n    // Policy creation with duplicate names throws in Trusted Types.\n    var suffix = null;\n    var ATTR_NAME = 'data-tt-policy-suffix';\n    if (document.currentScript && document.currentScript.hasAttribute(ATTR_NAME)) {\n      suffix = document.currentScript.getAttribute(ATTR_NAME);\n    }\n\n    var policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n    try {\n      return trustedTypes.createPolicy(policyName, {\n        createHTML: function createHTML(html$$1) {\n          return html$$1;\n        }\n      });\n    } catch (_) {\n      // Policy creation failed (most likely another DOMPurify script has\n      // already run). Skip creating the policy, as this will only cause errors\n      // if TT are enforced.\n      console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n      return null;\n    }\n  };\n\n  function createDOMPurify() {\n    var window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n\n    var DOMPurify = function DOMPurify(root) {\n      return createDOMPurify(root);\n    };\n\n    /**\n     * Version label, exposed for easier checks\n     * if DOMPurify is up to date or not\n     */\n    DOMPurify.version = '2.3.4';\n\n    /**\n     * Array of elements that DOMPurify removed during sanitation.\n     * Empty if nothing was removed.\n     */\n    DOMPurify.removed = [];\n\n    if (!window || !window.document || window.document.nodeType !== 9) {\n      // Not running in a browser, provide a factory function\n      // so that you can pass your own Window\n      DOMPurify.isSupported = false;\n\n      return DOMPurify;\n    }\n\n    var originalDocument = window.document;\n\n    var document = window.document;\n    var DocumentFragment = window.DocumentFragment,\n        HTMLTemplateElement = window.HTMLTemplateElement,\n        Node = window.Node,\n        Element = window.Element,\n        NodeFilter = window.NodeFilter,\n        _window$NamedNodeMap = window.NamedNodeMap,\n        NamedNodeMap = _window$NamedNodeMap === undefined ? window.NamedNodeMap || window.MozNamedAttrMap : _window$NamedNodeMap,\n        HTMLFormElement = window.HTMLFormElement,\n        DOMParser = window.DOMParser,\n        trustedTypes = window.trustedTypes;\n\n\n    var ElementPrototype = Element.prototype;\n\n    var cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n    var getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n    var getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n    var getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n    // As per issue #47, the web-components registry is inherited by a\n    // new document created via createHTMLDocument. As per the spec\n    // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n    // a new empty registry is used when creating a template contents owner\n    // document, so we use that as our parent document to ensure nothing\n    // is inherited.\n    if (typeof HTMLTemplateElement === 'function') {\n      var template = document.createElement('template');\n      if (template.content && template.content.ownerDocument) {\n        document = template.content.ownerDocument;\n      }\n    }\n\n    var trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, originalDocument);\n    var emptyHTML = trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML('') : '';\n\n    var _document = document,\n        implementation = _document.implementation,\n        createNodeIterator = _document.createNodeIterator,\n        createDocumentFragment = _document.createDocumentFragment,\n        getElementsByTagName = _document.getElementsByTagName;\n    var importNode = originalDocument.importNode;\n\n\n    var documentMode = {};\n    try {\n      documentMode = clone(document).documentMode ? document.documentMode : {};\n    } catch (_) {}\n\n    var hooks = {};\n\n    /**\n     * Expose whether this browser supports running the full DOMPurify.\n     */\n    DOMPurify.isSupported = typeof getParentNode === 'function' && implementation && typeof implementation.createHTMLDocument !== 'undefined' && documentMode !== 9;\n\n    var MUSTACHE_EXPR$$1 = MUSTACHE_EXPR,\n        ERB_EXPR$$1 = ERB_EXPR,\n        DATA_ATTR$$1 = DATA_ATTR,\n        ARIA_ATTR$$1 = ARIA_ATTR,\n        IS_SCRIPT_OR_DATA$$1 = IS_SCRIPT_OR_DATA,\n        ATTR_WHITESPACE$$1 = ATTR_WHITESPACE;\n    var IS_ALLOWED_URI$$1 = IS_ALLOWED_URI;\n\n    /**\n     * We consider the elements and attributes below to be safe. Ideally\n     * don't add any new ones but feel free to remove unwanted ones.\n     */\n\n    /* allowed element names */\n\n    var ALLOWED_TAGS = null;\n    var DEFAULT_ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray$1(html), _toConsumableArray$1(svg), _toConsumableArray$1(svgFilters), _toConsumableArray$1(mathMl), _toConsumableArray$1(text)));\n\n    /* Allowed attribute names */\n    var ALLOWED_ATTR = null;\n    var DEFAULT_ALLOWED_ATTR = addToSet({}, [].concat(_toConsumableArray$1(html$1), _toConsumableArray$1(svg$1), _toConsumableArray$1(mathMl$1), _toConsumableArray$1(xml)));\n\n    /*\n     * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n     * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n     * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n     * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n     */\n    var CUSTOM_ELEMENT_HANDLING = Object.seal(Object.create(null, {\n      tagNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null\n      },\n      attributeNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null\n      },\n      allowCustomizedBuiltInElements: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: false\n      }\n    }));\n\n    /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n    var FORBID_TAGS = null;\n\n    /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n    var FORBID_ATTR = null;\n\n    /* Decide if ARIA attributes are okay */\n    var ALLOW_ARIA_ATTR = true;\n\n    /* Decide if custom data attributes are okay */\n    var ALLOW_DATA_ATTR = true;\n\n    /* Decide if unknown protocols are okay */\n    var ALLOW_UNKNOWN_PROTOCOLS = false;\n\n    /* Output should be safe for common template engines.\n     * This means, DOMPurify removes data attributes, mustaches and ERB\n     */\n    var SAFE_FOR_TEMPLATES = false;\n\n    /* Decide if document with <html>... should be returned */\n    var WHOLE_DOCUMENT = false;\n\n    /* Track whether config is already set on this instance of DOMPurify. */\n    var SET_CONFIG = false;\n\n    /* Decide if all elements (e.g. style, script) must be children of\n     * document.body. By default, browsers might move them to document.head */\n    var FORCE_BODY = false;\n\n    /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n     * string (or a TrustedHTML object if Trusted Types are supported).\n     * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n     */\n    var RETURN_DOM = false;\n\n    /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n     * string  (or a TrustedHTML object if Trusted Types are supported) */\n    var RETURN_DOM_FRAGMENT = false;\n\n    /* Try to return a Trusted Type object instead of a string, return a string in\n     * case Trusted Types are not supported  */\n    var RETURN_TRUSTED_TYPE = false;\n\n    /* Output should be free from DOM clobbering attacks? */\n    var SANITIZE_DOM = true;\n\n    /* Keep element content when removing element? */\n    var KEEP_CONTENT = true;\n\n    /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n     * of importing it into a new Document and returning a sanitized copy */\n    var IN_PLACE = false;\n\n    /* Allow usage of profiles like html, svg and mathMl */\n    var USE_PROFILES = {};\n\n    /* Tags to ignore content of when KEEP_CONTENT is true */\n    var FORBID_CONTENTS = null;\n    var DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n\n    /* Tags that are safe for data: URIs */\n    var DATA_URI_TAGS = null;\n    var DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n\n    /* Attributes safe for values like \"javascript:\" */\n    var URI_SAFE_ATTRIBUTES = null;\n    var DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n\n    var MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n    var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n    var HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n    /* Document namespace */\n    var NAMESPACE = HTML_NAMESPACE;\n    var IS_EMPTY_INPUT = false;\n\n    /* Parsing of strict XHTML documents */\n    var PARSER_MEDIA_TYPE = void 0;\n    var SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n    var DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n    var transformCaseFunc = void 0;\n\n    /* Keep a reference to config to pass to hooks */\n    var CONFIG = null;\n\n    /* Ideally, do not touch anything below this line */\n    /* ______________________________________________ */\n\n    var formElement = document.createElement('form');\n\n    var isRegexOrFunction = function isRegexOrFunction(testValue) {\n      return testValue instanceof RegExp || testValue instanceof Function;\n    };\n\n    /**\n     * _parseConfig\n     *\n     * @param  {Object} cfg optional config literal\n     */\n    // eslint-disable-next-line complexity\n    var _parseConfig = function _parseConfig(cfg) {\n      if (CONFIG && CONFIG === cfg) {\n        return;\n      }\n\n      /* Shield configuration object from tampering */\n      if (!cfg || (typeof cfg === 'undefined' ? 'undefined' : _typeof(cfg)) !== 'object') {\n        cfg = {};\n      }\n\n      /* Shield configuration object from prototype pollution */\n      cfg = clone(cfg);\n\n      /* Set configuration parameters */\n      ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ? addToSet({}, cfg.ALLOWED_TAGS) : DEFAULT_ALLOWED_TAGS;\n      ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ? addToSet({}, cfg.ALLOWED_ATTR) : DEFAULT_ALLOWED_ATTR;\n      URI_SAFE_ATTRIBUTES = 'ADD_URI_SAFE_ATTR' in cfg ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR) : DEFAULT_URI_SAFE_ATTRIBUTES;\n      DATA_URI_TAGS = 'ADD_DATA_URI_TAGS' in cfg ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS) : DEFAULT_DATA_URI_TAGS;\n      FORBID_CONTENTS = 'FORBID_CONTENTS' in cfg ? addToSet({}, cfg.FORBID_CONTENTS) : DEFAULT_FORBID_CONTENTS;\n      FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS) : {};\n      FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR) : {};\n      USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n      ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n      ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n      ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n      SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n      WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n      RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n      RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n      RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n      FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n      SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n      KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n      IN_PLACE = cfg.IN_PLACE || false; // Default false\n      IS_ALLOWED_URI$$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI$$1;\n      NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n      if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n        CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n      }\n\n      if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n        CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n      }\n\n      if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n        CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n      }\n\n      PARSER_MEDIA_TYPE =\n      // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? PARSER_MEDIA_TYPE = DEFAULT_PARSER_MEDIA_TYPE : PARSER_MEDIA_TYPE = cfg.PARSER_MEDIA_TYPE;\n\n      // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n      transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? function (x) {\n        return x;\n      } : stringToLowerCase;\n\n      if (SAFE_FOR_TEMPLATES) {\n        ALLOW_DATA_ATTR = false;\n      }\n\n      if (RETURN_DOM_FRAGMENT) {\n        RETURN_DOM = true;\n      }\n\n      /* Parse profile info */\n      if (USE_PROFILES) {\n        ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray$1(text)));\n        ALLOWED_ATTR = [];\n        if (USE_PROFILES.html === true) {\n          addToSet(ALLOWED_TAGS, html);\n          addToSet(ALLOWED_ATTR, html$1);\n        }\n\n        if (USE_PROFILES.svg === true) {\n          addToSet(ALLOWED_TAGS, svg);\n          addToSet(ALLOWED_ATTR, svg$1);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n\n        if (USE_PROFILES.svgFilters === true) {\n          addToSet(ALLOWED_TAGS, svgFilters);\n          addToSet(ALLOWED_ATTR, svg$1);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n\n        if (USE_PROFILES.mathMl === true) {\n          addToSet(ALLOWED_TAGS, mathMl);\n          addToSet(ALLOWED_ATTR, mathMl$1);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n      }\n\n      /* Merge configuration parameters */\n      if (cfg.ADD_TAGS) {\n        if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n          ALLOWED_TAGS = clone(ALLOWED_TAGS);\n        }\n\n        addToSet(ALLOWED_TAGS, cfg.ADD_TAGS);\n      }\n\n      if (cfg.ADD_ATTR) {\n        if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n          ALLOWED_ATTR = clone(ALLOWED_ATTR);\n        }\n\n        addToSet(ALLOWED_ATTR, cfg.ADD_ATTR);\n      }\n\n      if (cfg.ADD_URI_SAFE_ATTR) {\n        addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR);\n      }\n\n      if (cfg.FORBID_CONTENTS) {\n        if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n          FORBID_CONTENTS = clone(FORBID_CONTENTS);\n        }\n\n        addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS);\n      }\n\n      /* Add #text in case KEEP_CONTENT is set to true */\n      if (KEEP_CONTENT) {\n        ALLOWED_TAGS['#text'] = true;\n      }\n\n      /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n      if (WHOLE_DOCUMENT) {\n        addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n      }\n\n      /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n      if (ALLOWED_TAGS.table) {\n        addToSet(ALLOWED_TAGS, ['tbody']);\n        delete FORBID_TAGS.tbody;\n      }\n\n      // Prevent further manipulation of configuration.\n      // Not available in IE8, Safari 5, etc.\n      if (freeze) {\n        freeze(cfg);\n      }\n\n      CONFIG = cfg;\n    };\n\n    var MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n\n    var HTML_INTEGRATION_POINTS = addToSet({}, ['foreignobject', 'desc', 'title', 'annotation-xml']);\n\n    /* Keep track of all possible SVG and MathML tags\n     * so that we can perform the namespace checks\n     * correctly. */\n    var ALL_SVG_TAGS = addToSet({}, svg);\n    addToSet(ALL_SVG_TAGS, svgFilters);\n    addToSet(ALL_SVG_TAGS, svgDisallowed);\n\n    var ALL_MATHML_TAGS = addToSet({}, mathMl);\n    addToSet(ALL_MATHML_TAGS, mathMlDisallowed);\n\n    /**\n     *\n     *\n     * @param  {Element} element a DOM element whose namespace is being checked\n     * @returns {boolean} Return false if the element has a\n     *  namespace that a spec-compliant parser would never\n     *  return. Return true otherwise.\n     */\n    var _checkValidNamespace = function _checkValidNamespace(element) {\n      var parent = getParentNode(element);\n\n      // In JSDOM, if we're inside shadow DOM, then parentNode\n      // can be null. We just simulate parent in this case.\n      if (!parent || !parent.tagName) {\n        parent = {\n          namespaceURI: HTML_NAMESPACE,\n          tagName: 'template'\n        };\n      }\n\n      var tagName = stringToLowerCase(element.tagName);\n      var parentTagName = stringToLowerCase(parent.tagName);\n\n      if (element.namespaceURI === SVG_NAMESPACE) {\n        // The only way to switch from HTML namespace to SVG\n        // is via <svg>. If it happens via any other tag, then\n        // it should be killed.\n        if (parent.namespaceURI === HTML_NAMESPACE) {\n          return tagName === 'svg';\n        }\n\n        // The only way to switch from MathML to SVG is via\n        // svg if parent is either <annotation-xml> or MathML\n        // text integration points.\n        if (parent.namespaceURI === MATHML_NAMESPACE) {\n          return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n        }\n\n        // We only allow elements that are defined in SVG\n        // spec. All others are disallowed in SVG namespace.\n        return Boolean(ALL_SVG_TAGS[tagName]);\n      }\n\n      if (element.namespaceURI === MATHML_NAMESPACE) {\n        // The only way to switch from HTML namespace to MathML\n        // is via <math>. If it happens via any other tag, then\n        // it should be killed.\n        if (parent.namespaceURI === HTML_NAMESPACE) {\n          return tagName === 'math';\n        }\n\n        // The only way to switch from SVG to MathML is via\n        // <math> and HTML integration points\n        if (parent.namespaceURI === SVG_NAMESPACE) {\n          return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n        }\n\n        // We only allow elements that are defined in MathML\n        // spec. All others are disallowed in MathML namespace.\n        return Boolean(ALL_MATHML_TAGS[tagName]);\n      }\n\n      if (element.namespaceURI === HTML_NAMESPACE) {\n        // The only way to switch from SVG to HTML is via\n        // HTML integration points, and from MathML to HTML\n        // is via MathML text integration points\n        if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n          return false;\n        }\n\n        if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n          return false;\n        }\n\n        // Certain elements are allowed in both SVG and HTML\n        // namespace. We need to specify them explicitly\n        // so that they don't get erronously deleted from\n        // HTML namespace.\n        var commonSvgAndHTMLElements = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n\n        // We disallow tags that are specific for MathML\n        // or SVG and should never appear in HTML namespace\n        return !ALL_MATHML_TAGS[tagName] && (commonSvgAndHTMLElements[tagName] || !ALL_SVG_TAGS[tagName]);\n      }\n\n      // The code should never reach this place (this means\n      // that the element somehow got namespace that is not\n      // HTML, SVG or MathML). Return false just in case.\n      return false;\n    };\n\n    /**\n     * _forceRemove\n     *\n     * @param  {Node} node a DOM node\n     */\n    var _forceRemove = function _forceRemove(node) {\n      arrayPush(DOMPurify.removed, { element: node });\n      try {\n        // eslint-disable-next-line unicorn/prefer-dom-node-remove\n        node.parentNode.removeChild(node);\n      } catch (_) {\n        try {\n          node.outerHTML = emptyHTML;\n        } catch (_) {\n          node.remove();\n        }\n      }\n    };\n\n    /**\n     * _removeAttribute\n     *\n     * @param  {String} name an Attribute name\n     * @param  {Node} node a DOM node\n     */\n    var _removeAttribute = function _removeAttribute(name, node) {\n      try {\n        arrayPush(DOMPurify.removed, {\n          attribute: node.getAttributeNode(name),\n          from: node\n        });\n      } catch (_) {\n        arrayPush(DOMPurify.removed, {\n          attribute: null,\n          from: node\n        });\n      }\n\n      node.removeAttribute(name);\n\n      // We void attribute values for unremovable \"is\"\" attributes\n      if (name === 'is' && !ALLOWED_ATTR[name]) {\n        if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n          try {\n            _forceRemove(node);\n          } catch (_) {}\n        } else {\n          try {\n            node.setAttribute(name, '');\n          } catch (_) {}\n        }\n      }\n    };\n\n    /**\n     * _initDocument\n     *\n     * @param  {String} dirty a string of dirty markup\n     * @return {Document} a DOM, filled with the dirty markup\n     */\n    var _initDocument = function _initDocument(dirty) {\n      /* Create a HTML document */\n      var doc = void 0;\n      var leadingWhitespace = void 0;\n\n      if (FORCE_BODY) {\n        dirty = '<remove></remove>' + dirty;\n      } else {\n        /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n        var matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n        leadingWhitespace = matches && matches[0];\n      }\n\n      if (PARSER_MEDIA_TYPE === 'application/xhtml+xml') {\n        // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n        dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n      }\n\n      var dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      /*\n       * Use the DOMParser API by default, fallback later if needs be\n       * DOMParser not work for svg when has multiple root element.\n       */\n      if (NAMESPACE === HTML_NAMESPACE) {\n        try {\n          doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n        } catch (_) {}\n      }\n\n      /* Use createHTMLDocument in case DOMParser is not available */\n      if (!doc || !doc.documentElement) {\n        doc = implementation.createDocument(NAMESPACE, 'template', null);\n        try {\n          doc.documentElement.innerHTML = IS_EMPTY_INPUT ? '' : dirtyPayload;\n        } catch (_) {\n          // Syntax error if dirtyPayload is invalid xml\n        }\n      }\n\n      var body = doc.body || doc.documentElement;\n\n      if (dirty && leadingWhitespace) {\n        body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n      }\n\n      /* Work on whole document or just its body */\n      if (NAMESPACE === HTML_NAMESPACE) {\n        return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n      }\n\n      return WHOLE_DOCUMENT ? doc.documentElement : body;\n    };\n\n    /**\n     * _createIterator\n     *\n     * @param  {Document} root document/fragment to create iterator for\n     * @return {Iterator} iterator instance\n     */\n    var _createIterator = function _createIterator(root) {\n      return createNodeIterator.call(root.ownerDocument || root, root, NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, null, false);\n    };\n\n    /**\n     * _isClobbered\n     *\n     * @param  {Node} elm element to check for clobbering attacks\n     * @return {Boolean} true if clobbered, false if safe\n     */\n    var _isClobbered = function _isClobbered(elm) {\n      return elm instanceof HTMLFormElement && (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string' || typeof elm.insertBefore !== 'function');\n    };\n\n    /**\n     * _isNode\n     *\n     * @param  {Node} obj object to check whether it's a DOM node\n     * @return {Boolean} true is object is a DOM node\n     */\n    var _isNode = function _isNode(object) {\n      return (typeof Node === 'undefined' ? 'undefined' : _typeof(Node)) === 'object' ? object instanceof Node : object && (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string';\n    };\n\n    /**\n     * _executeHook\n     * Execute user configurable hooks\n     *\n     * @param  {String} entryPoint  Name of the hook's entry point\n     * @param  {Node} currentNode node to work on with the hook\n     * @param  {Object} data additional hook parameters\n     */\n    var _executeHook = function _executeHook(entryPoint, currentNode, data) {\n      if (!hooks[entryPoint]) {\n        return;\n      }\n\n      arrayForEach(hooks[entryPoint], function (hook) {\n        hook.call(DOMPurify, currentNode, data, CONFIG);\n      });\n    };\n\n    /**\n     * _sanitizeElements\n     *\n     * @protect nodeName\n     * @protect textContent\n     * @protect removeChild\n     *\n     * @param   {Node} currentNode to check for permission to exist\n     * @return  {Boolean} true if node was killed, false if left alive\n     */\n    var _sanitizeElements = function _sanitizeElements(currentNode) {\n      var content = void 0;\n\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeElements', currentNode, null);\n\n      /* Check if element is clobbered or can clobber */\n      if (_isClobbered(currentNode)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Check if tagname contains Unicode */\n      if (stringMatch(currentNode.nodeName, /[\\u0080-\\uFFFF]/)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Now let's check the element's type and name */\n      var tagName = transformCaseFunc(currentNode.nodeName);\n\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeElement', currentNode, {\n        tagName: tagName,\n        allowedTags: ALLOWED_TAGS\n      });\n\n      /* Detect mXSS attempts abusing namespace confusion */\n      if (!_isNode(currentNode.firstElementChild) && (!_isNode(currentNode.content) || !_isNode(currentNode.content.firstElementChild)) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Mitigate a problem with templates inside select */\n      if (tagName === 'select' && regExpTest(/<template/i, currentNode.innerHTML)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Remove element if anything forbids its presence */\n      if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n        /* Keep content except for bad-listed elements */\n        if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n          var parentNode = getParentNode(currentNode) || currentNode.parentNode;\n          var childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n          if (childNodes && parentNode) {\n            var childCount = childNodes.length;\n\n            for (var i = childCount - 1; i >= 0; --i) {\n              parentNode.insertBefore(cloneNode(childNodes[i], true), getNextSibling(currentNode));\n            }\n          }\n        }\n\n        if (!FORBID_TAGS[tagName] && _basicCustomElementTest(tagName)) {\n          if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) return false;\n          if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) return false;\n        }\n\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Check whether element has a valid namespace */\n      if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      if ((tagName === 'noscript' || tagName === 'noembed') && regExpTest(/<\\/no(script|embed)/i, currentNode.innerHTML)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Sanitize element content to be template-safe */\n      if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n        /* Get the element's text content */\n        content = currentNode.textContent;\n        content = stringReplace(content, MUSTACHE_EXPR$$1, ' ');\n        content = stringReplace(content, ERB_EXPR$$1, ' ');\n        if (currentNode.textContent !== content) {\n          arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n          currentNode.textContent = content;\n        }\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeElements', currentNode, null);\n\n      return false;\n    };\n\n    /**\n     * _isValidAttribute\n     *\n     * @param  {string} lcTag Lowercase tag name of containing element.\n     * @param  {string} lcName Lowercase attribute name.\n     * @param  {string} value Attribute value.\n     * @return {Boolean} Returns true if `value` is valid, otherwise false.\n     */\n    // eslint-disable-next-line complexity\n    var _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n      /* Make sure attribute cannot clobber */\n      if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n        return false;\n      }\n\n      /* Allow valid data-* attributes: At least one character after \"-\"\n          (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n          XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n          We don't need to check the value; it's always URI safe. */\n      if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR$$1, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR$$1, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n        if (\n        // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n        _basicCustomElementTest(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) ||\n        // Alternative, second condition checks if it's an `is`-attribute, AND\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n          return false;\n        }\n        /* Check value is safe. First, is attr inert? If so, is safe */\n      } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$$1, stringReplace(value, ATTR_WHITESPACE$$1, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA$$1, stringReplace(value, ATTR_WHITESPACE$$1, ''))) ; else if (!value) ; else {\n        return false;\n      }\n\n      return true;\n    };\n\n    /**\n     * _basicCustomElementCheck\n     * checks if at least one dash is included in tagName, and it's not the first char\n     * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n     * @param {string} tagName name of the tag of the node to sanitize\n     */\n    var _basicCustomElementTest = function _basicCustomElementTest(tagName) {\n      return tagName.indexOf('-') > 0;\n    };\n\n    /**\n     * _sanitizeAttributes\n     *\n     * @protect attributes\n     * @protect nodeName\n     * @protect removeAttribute\n     * @protect setAttribute\n     *\n     * @param  {Node} currentNode to sanitize\n     */\n    var _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n      var attr = void 0;\n      var value = void 0;\n      var lcName = void 0;\n      var l = void 0;\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n      var attributes = currentNode.attributes;\n\n      /* Check if we have attributes; if not we might have a text node */\n\n      if (!attributes) {\n        return;\n      }\n\n      var hookEvent = {\n        attrName: '',\n        attrValue: '',\n        keepAttr: true,\n        allowedAttributes: ALLOWED_ATTR\n      };\n      l = attributes.length;\n\n      /* Go backwards over all attributes; safely remove bad ones */\n      while (l--) {\n        attr = attributes[l];\n        var _attr = attr,\n            name = _attr.name,\n            namespaceURI = _attr.namespaceURI;\n\n        value = stringTrim(attr.value);\n        lcName = transformCaseFunc(name);\n\n        /* Execute a hook if present */\n        hookEvent.attrName = lcName;\n        hookEvent.attrValue = value;\n        hookEvent.keepAttr = true;\n        hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n        _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n        value = hookEvent.attrValue;\n        /* Did the hooks approve of the attribute? */\n        if (hookEvent.forceKeepAttr) {\n          continue;\n        }\n\n        /* Remove attribute */\n        _removeAttribute(name, currentNode);\n\n        /* Did the hooks approve of the attribute? */\n        if (!hookEvent.keepAttr) {\n          continue;\n        }\n\n        /* Work around a security issue in jQuery 3.0 */\n        if (regExpTest(/\\/>/i, value)) {\n          _removeAttribute(name, currentNode);\n          continue;\n        }\n\n        /* Sanitize attribute content to be template-safe */\n        if (SAFE_FOR_TEMPLATES) {\n          value = stringReplace(value, MUSTACHE_EXPR$$1, ' ');\n          value = stringReplace(value, ERB_EXPR$$1, ' ');\n        }\n\n        /* Is `value` valid for this attribute? */\n        var lcTag = transformCaseFunc(currentNode.nodeName);\n        if (!_isValidAttribute(lcTag, lcName, value)) {\n          continue;\n        }\n\n        /* Handle invalid data-* attribute set by try-catching it */\n        try {\n          if (namespaceURI) {\n            currentNode.setAttributeNS(namespaceURI, name, value);\n          } else {\n            /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n            currentNode.setAttribute(name, value);\n          }\n\n          arrayPop(DOMPurify.removed);\n        } catch (_) {}\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeAttributes', currentNode, null);\n    };\n\n    /**\n     * _sanitizeShadowDOM\n     *\n     * @param  {DocumentFragment} fragment to iterate over recursively\n     */\n    var _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n      var shadowNode = void 0;\n      var shadowIterator = _createIterator(fragment);\n\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n      while (shadowNode = shadowIterator.nextNode()) {\n        /* Execute a hook if present */\n        _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n        /* Sanitize tags and elements */\n        if (_sanitizeElements(shadowNode)) {\n          continue;\n        }\n\n        /* Deep shadow DOM detected */\n        if (shadowNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(shadowNode.content);\n        }\n\n        /* Check attributes, sanitize if necessary */\n        _sanitizeAttributes(shadowNode);\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeShadowDOM', fragment, null);\n    };\n\n    /**\n     * Sanitize\n     * Public method providing core sanitation functionality\n     *\n     * @param {String|Node} dirty string or DOM node\n     * @param {Object} configuration object\n     */\n    // eslint-disable-next-line complexity\n    DOMPurify.sanitize = function (dirty, cfg) {\n      var body = void 0;\n      var importedNode = void 0;\n      var currentNode = void 0;\n      var oldNode = void 0;\n      var returnNode = void 0;\n      /* Make sure we have a string to sanitize.\n        DO NOT return early, as this will return the wrong type if\n        the user has requested a DOM object rather than a string */\n      IS_EMPTY_INPUT = !dirty;\n      if (IS_EMPTY_INPUT) {\n        dirty = '<!-->';\n      }\n\n      /* Stringify, in case dirty is an object */\n      if (typeof dirty !== 'string' && !_isNode(dirty)) {\n        // eslint-disable-next-line no-negated-condition\n        if (typeof dirty.toString !== 'function') {\n          throw typeErrorCreate('toString is not a function');\n        } else {\n          dirty = dirty.toString();\n          if (typeof dirty !== 'string') {\n            throw typeErrorCreate('dirty is not a string, aborting');\n          }\n        }\n      }\n\n      /* Check we can run. Otherwise fall back or ignore */\n      if (!DOMPurify.isSupported) {\n        if (_typeof(window.toStaticHTML) === 'object' || typeof window.toStaticHTML === 'function') {\n          if (typeof dirty === 'string') {\n            return window.toStaticHTML(dirty);\n          }\n\n          if (_isNode(dirty)) {\n            return window.toStaticHTML(dirty.outerHTML);\n          }\n        }\n\n        return dirty;\n      }\n\n      /* Assign config vars */\n      if (!SET_CONFIG) {\n        _parseConfig(cfg);\n      }\n\n      /* Clean up removed elements */\n      DOMPurify.removed = [];\n\n      /* Check if dirty is correctly typed for IN_PLACE */\n      if (typeof dirty === 'string') {\n        IN_PLACE = false;\n      }\n\n      if (IN_PLACE) ; else if (dirty instanceof Node) {\n        /* If dirty is a DOM element, append to an empty document to avoid\n           elements being stripped by the parser */\n        body = _initDocument('<!---->');\n        importedNode = body.ownerDocument.importNode(dirty, true);\n        if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n          /* Node is already a body, use as is */\n          body = importedNode;\n        } else if (importedNode.nodeName === 'HTML') {\n          body = importedNode;\n        } else {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          body.appendChild(importedNode);\n        }\n      } else {\n        /* Exit directly if we have nothing to do */\n        if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1) {\n          return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n        }\n\n        /* Initialize the document to work on */\n        body = _initDocument(dirty);\n\n        /* Check we have a DOM node from the data */\n        if (!body) {\n          return RETURN_DOM ? null : emptyHTML;\n        }\n      }\n\n      /* Remove first element node (ours) if FORCE_BODY is set */\n      if (body && FORCE_BODY) {\n        _forceRemove(body.firstChild);\n      }\n\n      /* Get node iterator */\n      var nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n\n      /* Now start iterating over the created document */\n      while (currentNode = nodeIterator.nextNode()) {\n        /* Fix IE's strange behavior with manipulated textNodes #89 */\n        if (currentNode.nodeType === 3 && currentNode === oldNode) {\n          continue;\n        }\n\n        /* Sanitize tags and elements */\n        if (_sanitizeElements(currentNode)) {\n          continue;\n        }\n\n        /* Shadow DOM detected, sanitize it */\n        if (currentNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(currentNode.content);\n        }\n\n        /* Check attributes, sanitize if necessary */\n        _sanitizeAttributes(currentNode);\n\n        oldNode = currentNode;\n      }\n\n      oldNode = null;\n\n      /* If we sanitized `dirty` in-place, return it. */\n      if (IN_PLACE) {\n        return dirty;\n      }\n\n      /* Return sanitized string or DOM */\n      if (RETURN_DOM) {\n        if (RETURN_DOM_FRAGMENT) {\n          returnNode = createDocumentFragment.call(body.ownerDocument);\n\n          while (body.firstChild) {\n            // eslint-disable-next-line unicorn/prefer-dom-node-append\n            returnNode.appendChild(body.firstChild);\n          }\n        } else {\n          returnNode = body;\n        }\n\n        if (ALLOWED_ATTR.shadowroot) {\n          /*\n            AdoptNode() is not used because internal state is not reset\n            (e.g. the past names map of a HTMLFormElement), this is safe\n            in theory but we would rather not risk another attack vector.\n            The state that is cloned by importNode() is explicitly defined\n            by the specs.\n          */\n          returnNode = importNode.call(originalDocument, returnNode, true);\n        }\n\n        return returnNode;\n      }\n\n      var serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n      /* Sanitize final string template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR$$1, ' ');\n        serializedHTML = stringReplace(serializedHTML, ERB_EXPR$$1, ' ');\n      }\n\n      return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n    };\n\n    /**\n     * Public method to set the configuration once\n     * setConfig\n     *\n     * @param {Object} cfg configuration object\n     */\n    DOMPurify.setConfig = function (cfg) {\n      _parseConfig(cfg);\n      SET_CONFIG = true;\n    };\n\n    /**\n     * Public method to remove the configuration\n     * clearConfig\n     *\n     */\n    DOMPurify.clearConfig = function () {\n      CONFIG = null;\n      SET_CONFIG = false;\n    };\n\n    /**\n     * Public method to check if an attribute value is valid.\n     * Uses last set config, if any. Otherwise, uses config defaults.\n     * isValidAttribute\n     *\n     * @param  {string} tag Tag name of containing element.\n     * @param  {string} attr Attribute name.\n     * @param  {string} value Attribute value.\n     * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n     */\n    DOMPurify.isValidAttribute = function (tag, attr, value) {\n      /* Initialize shared config vars if necessary. */\n      if (!CONFIG) {\n        _parseConfig({});\n      }\n\n      var lcTag = transformCaseFunc(tag);\n      var lcName = transformCaseFunc(attr);\n      return _isValidAttribute(lcTag, lcName, value);\n    };\n\n    /**\n     * AddHook\n     * Public method to add DOMPurify hooks\n     *\n     * @param {String} entryPoint entry point for the hook to add\n     * @param {Function} hookFunction function to execute\n     */\n    DOMPurify.addHook = function (entryPoint, hookFunction) {\n      if (typeof hookFunction !== 'function') {\n        return;\n      }\n\n      hooks[entryPoint] = hooks[entryPoint] || [];\n      arrayPush(hooks[entryPoint], hookFunction);\n    };\n\n    /**\n     * RemoveHook\n     * Public method to remove a DOMPurify hook at a given entryPoint\n     * (pops it from the stack of hooks if more are present)\n     *\n     * @param {String} entryPoint entry point for the hook to remove\n     */\n    DOMPurify.removeHook = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        arrayPop(hooks[entryPoint]);\n      }\n    };\n\n    /**\n     * RemoveHooks\n     * Public method to remove all DOMPurify hooks at a given entryPoint\n     *\n     * @param  {String} entryPoint entry point for the hooks to remove\n     */\n    DOMPurify.removeHooks = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        hooks[entryPoint] = [];\n      }\n    };\n\n    /**\n     * RemoveAllHooks\n     * Public method to remove all DOMPurify hooks\n     *\n     */\n    DOMPurify.removeAllHooks = function () {\n      hooks = {};\n    };\n\n    return DOMPurify;\n  }\n\n  var purify = createDOMPurify();\n\n  return purify;\n\n}));\n//# sourceMappingURL=purify.js.map\n","export const DisallowedContentTypes = [\n  \"message/delivery-status\",\n  \"message/rfc822\",\n  \"text/calendar\",\n];\n","<svelte:options tag=\"nylas-message-body\" />\n\n<!-- This component is being used to render Message body in Email component. \n  This is to ensure the styles in the html message body are encapsulated and \n  does not affect the global component enclosing it -->\n<script>\n  import * as DOMPurify from \"dompurify\";\n  import { getEventDispatcher } from \"@commons/methods/component\";\n  import { get_current_component, onMount } from \"svelte/internal\";\n  import { DisallowedContentTypes } from \"@commons/constants/attachment-content-types\";\n\n  export let message;\n  export let body;\n\n  const dispatchEvent = getEventDispatcher(get_current_component());\n\n  async function downloadSelectedFile(event, file) {\n    event.stopImmediatePropagation();\n    dispatchEvent(\"downloadClicked\", {\n      event,\n      message,\n      file,\n    });\n  }\n\n  let attachedFiles = [];\n\n  onMount(() => {\n    if (message && message.files.length > 0) {\n      for (const [fileIndex, file] of message.files.entries()) {\n        if (\n          file.content_disposition === \"attachment\" &&\n          !file.content_id && // treat all files with content_id as inline\n          !DisallowedContentTypes.includes(file.content_type)\n        ) {\n          attachedFiles.push(message.files[fileIndex]);\n        }\n      }\n    }\n  });\n</script>\n\n<style lang=\"scss\">\n  div {\n    width: inherit;\n\n    div.attachment {\n      margin: 1rem 0 0 0;\n      display: flex;\n      gap: 0.5rem;\n\n      button {\n        height: fit-content;\n        width: max-content;\n        padding: 0.3rem 1rem;\n        border: 1px solid var(--grey);\n        border-radius: 30px;\n        background: white;\n        cursor: pointer;\n        &:hover {\n          background: var(--grey-light);\n        }\n      }\n    }\n  }\n</style>\n\n<div>\n  {#if message}\n    {#if typeof body !== null}\n      {@html DOMPurify.sanitize(body)}\n    {/if}\n    <div class=\"attachment\">\n      {#await attachedFiles then files}\n        {#if files && Array.isArray(files) && files.length > 0}\n          {#each files as file}\n            <button\n              on:click|stopPropagation={(e) => downloadSelectedFile(e, file)}\n            >\n              {file.filename || file.id}\n            </button>\n          {/each}\n        {/if}\n      {/await}\n    </div>\n  {/if}\n</div>\n","<svelte:options tag=\"nylas-tooltip\" />\n\n<script lang=\"ts\">\n  import { get_current_component } from \"svelte/internal\";\n  import { getEventDispatcher } from \"@commons/methods/component\";\n  const dispatchEvent = getEventDispatcher(get_current_component());\n\n  /**\n   * Add this CSS to the parent component: nylas-tooltip { position: relative; }\n   * This ensures the tooltip is positioned absolutely to the tooltip component rather than the page\n   **/\n\n  // #region tooltip props\n  export let current_tooltip_id; // id of visible tooltip in parent component\n  export let content;\n  export let id;\n  export let icon;\n  export let text;\n  // #endregion tooltip props\n\n  $: isTooltipVisible =\n    current_tooltip_id && current_tooltip_id === id ? true : false;\n\n  // send tooltipID to parent component, so it updates the current_tooltip_id prop\n  function toggleTooltipVisibility() {\n    if (current_tooltip_id !== id) {\n      dispatchEvent(\"toggleTooltip\", {\n        tooltipID: id,\n      });\n    } else {\n      // close the tooltip if user clicks tooltip button again\n      isTooltipVisible = !isTooltipVisible;\n    }\n  }\n</script>\n\n<style lang=\"scss\">\n  @import \"../../../components/theming/variables.scss\";\n  $spacing-s: 0.5rem;\n  button.tooltip-trigger {\n    background: transparent;\n    border: none;\n    box-shadow: none;\n    cursor: pointer;\n    padding: 0;\n    height: auto;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    align-content: center;\n    justify-content: center;\n  }\n\n  .icon-container {\n    width: 1rem;\n    &.reverse-icon {\n      transform: rotate(180deg);\n    }\n  }\n\n  p.tooltip {\n    background: var(--grey-lightest);\n    border-radius: 2px;\n    color: var(--grey-dark);\n    box-shadow: 0px 3px 2px rgba(0, 0, 0, 0.25);\n    left: 50%;\n    padding: $spacing-s;\n    position: absolute;\n    top: 8px;\n    transform: translate(-50%, 0);\n    width: max-content;\n    max-width: 240px;\n    max-height: 240px;\n    overflow-y: scroll;\n    word-break: break-word;\n    z-index: 1;\n  }\n</style>\n\n<button\n  class=\"tooltip-trigger\"\n  aria-expanded={isTooltipVisible ? \"true\" : \"false\"}\n  id={id ? `tooltip-trigger-${id}` : \"\"}\n  aria-describedby={id}\n  aria-label={isTooltipVisible ? \"hide email\" : \"show email\"}\n  on:click|stopPropagation={(e) => toggleTooltipVisibility(e)}\n>\n  {#if text}\n    <p>{text}</p>\n  {/if}\n  {#if icon}\n    <div class=\"icon-container\" class:reverse-icon={icon && isTooltipVisible}>\n      <svelte:component this={icon} aria-hidden=\"true\" />\n    </div>\n  {/if}\n</button>\n{#if isTooltipVisible}\n  <p {id} role=\"tooltip\" tabindex=\"0\" class=\"tooltip\">\n    {content}\n    <!-- {@html content} -->\n  </p>\n{/if}\n","<svg id=\"Capa_1\" enable-background=\"new 0 0 497 497\" height=\"512\" viewBox=\"0 0 497 497\" xmlns=\"http://www.w3.org/2000/svg\"><g><circle cx=\"98\" cy=\"376\" fill=\"#909ba6\" r=\"53\"/><circle cx=\"439\" cy=\"336\" fill=\"#c8d2dc\" r=\"46\"/><circle cx=\"397\" cy=\"112\" fill=\"#e9edf1\" r=\"38\"/><ellipse cx=\"56.245\" cy=\"244.754\" fill=\"#7e8b96\" rx=\"56.245\" ry=\"54.874\"/><ellipse cx=\"217.821\" cy=\"447.175\" fill=\"#a2abb8\" rx=\"51.132\" ry=\"49.825\"/><ellipse cx=\"349.229\" cy=\"427.873\" fill=\"#b9c3cd\" rx=\"48.575\" ry=\"47.297\"/><ellipse cx=\"117.092\" cy=\"114.794\" fill=\"#5f6c75\" rx=\"58.801\" ry=\"57.397\"/><ellipse cx=\"453.538\" cy=\"216.477\" fill=\"#dce6eb\" rx=\"43.462\" ry=\"42.656\"/><circle cx=\"263\" cy=\"62\" fill=\"#4e5a61\" r=\"62\"/></g></svg>","<svelte:options tag=\"nylas-email\" />\n\n<script lang=\"ts\">\n  import {\n    EmailStore,\n    ErrorStore,\n    ManifestStore,\n    fetchAccount,\n    updateThread,\n    fetchMessage,\n    fetchEmail,\n    ContactStore,\n    fetchCleanConversations,\n    fetchThread,\n    silence,\n    FilesStore,\n  } from \"@commons\";\n  import type { Contact, ContactSearchQuery } from \"@commons/types/Contacts\";\n  import { get_current_component, onMount, tick } from \"svelte/internal\";\n  import {\n    buildInternalProps,\n    downloadAttachedFile,\n    getEventDispatcher,\n  } from \"@commons/methods/component\";\n  import DropdownSymbol from \"./assets/chevron-down.svg\";\n  import TrashIcon from \"./assets/trash-alt.svg\";\n  import MarkReadIcon from \"./assets/envelope-open-text.svg\";\n  import MarkUnreadIcon from \"./assets/envelope.svg\";\n  import AttachmentIcon from \"./assets/attachment.svg\";\n  import LeftArrowLineIcon from \"./assets/arrow-line.svg\";\n  import NoMessagesIcon from \"./assets/no-messages.svg\";\n  import DraftIcon from \"./assets/draft.svg\";\n  import type {\n    EmailProperties,\n    Participant,\n    ConversationQuery,\n    Conversation,\n    Thread,\n    Message,\n    Account,\n    Label,\n    Folder,\n    File,\n  } from \"@commons/types/Nylas\";\n  import \"@commons/components/ContactImage/ContactImage.svelte\";\n  import \"@commons/components/MessageBody.svelte\";\n  import \"@commons/components/Tooltip.svelte\";\n  import { AccountOrganizationUnit } from \"@commons/enums/Nylas\";\n  import { LabelStore } from \"@commons/store/labels\";\n  import { FolderStore } from \"@commons/store/folders\";\n  import * as DOMPurify from \"dompurify\";\n  import LoadingIcon from \"./assets/loading.svg\";\n  import { downloadFile } from \"@commons/connections/files\";\n  import { DisallowedContentTypes } from \"@commons/constants/attachment-content-types\";\n\n  const dispatchEvent = getEventDispatcher(get_current_component());\n  $: dispatchEvent(\"manifestLoaded\", manifest);\n\n  $: if (Object.keys($ErrorStore).length) {\n    dispatchEvent(\"onError\", $ErrorStore);\n  }\n\n  export let id: string = \"\";\n  export let access_token: string = \"\";\n\n  // export let messages: Message[] = [];\n  export let clean_conversation: boolean;\n  export let click_action: \"default\" | \"mailbox\" | \"custom\" = \"default\";\n  export let message_id: string;\n  export let message: Message;\n  export let show_contact_avatar: boolean;\n  export let show_expanded_email_view_onload: boolean;\n  export let show_number_of_messages: boolean;\n  export let show_received_timestamp: boolean;\n  export let show_star: boolean;\n  export let show_thread_actions: boolean;\n  export let theme: string;\n  export let thread_id: string;\n  export let thread: Thread;\n  export let you: Partial<Account>;\n\n  const defaultValueMap: Partial<EmailProperties> = {\n    clean_conversation: false,\n    click_action: \"default\",\n    message_id: \"\",\n    show_contact_avatar: true,\n    show_expanded_email_view_onload: false,\n    show_number_of_messages: true,\n    show_received_timestamp: true,\n    show_star: false,\n    show_thread_actions: false,\n    theme: \"theme-1\",\n    thread_id: \"\",\n    you: {},\n  };\n\n  let manifest: Partial<EmailProperties> = {};\n  let _this = <EmailProperties>buildInternalProps({}, {}, defaultValueMap);\n\n  let userEmail: string | undefined;\n  const PARTICIPANTS_TO_TRUNCATE = 3;\n\n  onMount(async () => {\n    await tick();\n    manifest = ((await $ManifestStore[\n      JSON.stringify({ component_id: id, access_token })\n    ]) || {}) as EmailProperties;\n\n    _this = buildInternalProps(\n      $$props,\n      manifest,\n      defaultValueMap,\n    ) as EmailProperties;\n\n    transformPropertyValues();\n\n    // Fetch Account\n    if (id && !_this.you?.id && !emailManuallyPassed) {\n      _this.you = await fetchAccount({\n        component_id: query.component_id,\n        access_token,\n      });\n      userEmail = <string>_this.you?.email_address;\n      // Initialize labels / folders\n      const accountOrganizationUnitQuery = {\n        component_id: id,\n        access_token,\n      };\n      if (_this.you?.organization_unit === AccountOrganizationUnit.Label) {\n        labels = await LabelStore.getLabels(accountOrganizationUnitQuery);\n      } else if (\n        _this.you?.organization_unit === AccountOrganizationUnit.Folder\n      ) {\n        folders = await FolderStore.getFolders(accountOrganizationUnitQuery);\n      }\n    }\n  });\n\n  let previousProps = $$props;\n  $: (async () => {\n    if (JSON.stringify(previousProps) !== JSON.stringify($$props)) {\n      _this = buildInternalProps(\n        $$props,\n        manifest,\n        defaultValueMap,\n      ) as EmailProperties;\n\n      await transformPropertyValues();\n      previousProps = $$props;\n    }\n  })();\n\n  async function transformPropertyValues() {\n    _this.thread_id = !thread && !message_id && !message ? _this.thread_id : \"\";\n\n    if (id && !_this.thread_id && !_this.thread && _this.message_id) {\n      fetchOneMessage();\n    }\n\n    if (!activeThread || previousProps.thread_id !== _this.thread_id) {\n      await getThread();\n    }\n  }\n\n  let contacts: Record<string, Contact> = {};\n  let activeThreadContact = {};\n\n  $: activeThreadContact =\n    activeThread && contacts\n      ? contacts[\n          activeThread.messages[activeThread.messages.length - 1]?.from[0].email\n        ]\n      : {};\n  $: activeMessageContact =\n    _this.message && contacts ? contacts[_this.message?.from[0].email] : {};\n\n  let threadIdChanged = false;\n  $: _this.thread_id, (threadIdChanged = true);\n\n  $: (async () => {\n    if (threadIdChanged || !contacts) {\n      threadIdChanged = false;\n      if (thread && thread.messages) {\n        await getThreadContacts(thread);\n      } else if (activeThread) {\n        await getThreadContacts(activeThread);\n      } else if (_this.message) {\n        const participant = _this.message.from[0];\n        contacts[participant.email] = await getContact(participant);\n      }\n    }\n  })();\n\n  async function getThreadContacts(thread: Thread) {\n    const fromParticipants =\n      thread.messages?.reduce<Record<string, Participant>>(\n        (participants, message) => {\n          const participant: Participant = message.from[0];\n          participants[participant.email] = participant;\n          return participants;\n        },\n        {},\n      ) || {};\n    const fromParticipantsArray =\n      Array.from(Object.values(fromParticipants)) || [];\n\n    for (const participant of fromParticipantsArray) {\n      const participantEmail = participant.email;\n      if (!contacts[participantEmail] && participantEmail) {\n        contacts[participantEmail] = await getContact(participant);\n      }\n    }\n  }\n\n  let main: Element;\n  let messageRefs: Element[] = [];\n  let messageLoadStatus: string[] = []; // \"loading\" | \"loaded\"\n  const MAX_DESKTOP_PARTICIPANTS = 2;\n  const MAX_MOBILE_PARTICIPANTS = 1;\n\n  // #region initialize label and folder vars (for trash)\n  let labels: Label[] = [];\n  $: trashLabelID =\n    labels && labels.length\n      ? labels.find((label) => label.name === \"trash\")?.id\n      : null;\n\n  let folders: Folder[] = [];\n  $: trashFolderID =\n    folders && folders.length\n      ? folders.find((folder) => folder.name === \"trash\")?.id\n      : null;\n  // #endregion initialize label and folder vars (for trash)\n\n  let participants: Participant[] = [];\n  $: {\n    participants = activeThread ? activeThread.participants : [];\n  }\n  let query: ConversationQuery;\n  $: query = {\n    access_token,\n    component_id: id,\n    thread_id: _this.thread_id,\n  };\n\n  let queryKey: string;\n  $: queryKey = JSON.stringify(query);\n\n  let activeThread: Conversation;\n\n  // #region thread intake and set\n  let fetchingThreadPromise: Promise<Conversation>;\n  async function getThread() {\n    if (id && _this.thread_id && !fetchingThreadPromise) {\n      fetchingThreadPromise = <Promise<Conversation>>fetchThread({\n        component_id: id,\n        thread_id: _this.thread_id,\n        access_token,\n      }).catch(silence);\n      const thread = await fetchingThreadPromise;\n      fetchingThreadPromise = <any>null;\n\n      // get body for last message in open thread\n      if (thread?.messages?.length > 0) {\n        const lastMsgIndex = thread.messages.length - 1;\n        thread.messages[lastMsgIndex].body = await fetchIndividualMessage(\n          lastMsgIndex,\n          thread.messages[lastMsgIndex].id,\n        );\n      }\n      if (thread) {\n        thread.expanded =\n          activeThread?.expanded ?? _this.show_expanded_email_view_onload;\n        activeThread = thread;\n      }\n    }\n  }\n\n  $: {\n    if (_this.thread && _this.thread.id) {\n      // Is it in the store already? (via <nylas-mailbox>, for example)\n      const localThread = ($EmailStore[queryKey]?.find(\n        (storedThread: Thread) =>\n          storedThread && storedThread.id === thread?.id,\n      ) ?? _this.thread) as Conversation;\n\n      // This is for Email component demo purpose, where we want to show expanded threads by default on load.\n      if (_this.show_expanded_email_view_onload) {\n        localThread.expanded = _this.show_expanded_email_view_onload;\n\n        // get body for last message in open thread\n        const lastMsg = localThread.messages[localThread.messages.length - 1];\n        lastMsg.body = lastMsg.body ?? lastMsg.snippet;\n      }\n      activeThread = localThread;\n    }\n  }\n\n  // #endregion thread intake and set\n  let emailManuallyPassed: boolean;\n  $: emailManuallyPassed = !!_this.thread;\n\n  //#region Clean Conversation\n  // If a user sets message_body_type to \"clean\", expand their message to clean conversation.\n  // This requires them to have access to the Nylas Neural API.\n\n  const CONVERSATION_ENDPOINT_MAX_MESSAGES = 20;\n\n  function cleanConversation() {\n    if (activeThread) {\n      fetchCleanConversations({\n        access_token,\n        component_id: id,\n        message_id: activeThread.messages\n          .slice(-CONVERSATION_ENDPOINT_MAX_MESSAGES)\n          .map((message) => message.id),\n      }).then((results) => {\n        results.forEach((msg: Message) => {\n          let existingMessage = activeThread.messages.find(\n            (message) => message.id === msg.id,\n          );\n          if (existingMessage) {\n            existingMessage.conversation = msg.conversation;\n          }\n        });\n        activeThread.messages = activeThread.messages;\n      });\n    } else if (_this.message) {\n      fetchCleanConversations({\n        component_id: id,\n        message_id: [_this.message.id],\n      }).then((results) => {\n        results.forEach((msg: Message) => {\n          if (_this.message) {\n            _this.message.conversation = msg.conversation;\n          }\n        });\n        activeThread.messages = activeThread.messages;\n      });\n    }\n  }\n\n  $: if (_this.clean_conversation && (_this.thread_id || _this.message_id)) {\n    cleanConversation();\n  }\n  //#endregion Clean Conversation\n\n  // #region get contact for ContactImage\n  let contact_query: ContactSearchQuery;\n  $: contact_query = {\n    component_id: id,\n    access_token,\n    query: \"\",\n  };\n\n  /*\n    Fetches contact for ContactImage component\n  */\n  async function getContact(account: any) {\n    contact_query[\"query\"] = `?email=${account.email}`;\n    if (id) {\n      let contact = $ContactStore[JSON.stringify(contact_query)];\n      if (!contact) {\n        contact = await ContactStore.addContact(contact_query);\n      }\n      return contact[0] ?? account;\n    } else {\n      return account;\n    }\n  }\n  // #endregion get contact for ContactImage\n\n  async function saveActiveThread() {\n    // if thread and if component_id (security)\n    if (activeThread && query.component_id && _this.thread_id) {\n      await updateThread(query, activeThread).catch(silence);\n    }\n  }\n\n  async function handleThread(event: MouseEvent | KeyboardEvent) {\n    if (activeThread.messages.length <= 0) {\n      return;\n    }\n    if (_this.click_action === \"default\" || _this.click_action === \"mailbox\") {\n      //#region read/unread\n      if (\n        activeThread &&\n        activeThread.unread &&\n        _this.click_action !== \"mailbox\"\n      ) {\n        activeThread.unread = !activeThread.unread;\n        await saveActiveThread();\n      }\n      //#endregion read/unread\n\n      const lastMsgIndex = activeThread.messages.length - 1;\n      activeThread.messages[lastMsgIndex].expanded =\n        !activeThread.messages[lastMsgIndex].expanded;\n\n      if (!emailManuallyPassed) {\n        // fetch last message\n        if (!activeThread.messages[lastMsgIndex].body) {\n          activeThread.messages[lastMsgIndex].body =\n            await fetchIndividualMessage(\n              lastMsgIndex,\n              activeThread.messages[lastMsgIndex].id,\n            );\n        }\n      }\n\n      //#region open thread + messages\n      activeThread.expanded = !activeThread.expanded;\n      // Upon expansion / lastMessage existing, scroll to it\n      if (activeThread.expanded && _this.click_action === \"default\") {\n        // Timeout here is to ensure the element is available before trying\n        // to scroll it into view\n        setTimeout(() => {\n          messageRefs[lastMsgIndex].scrollIntoView({\n            behavior: \"smooth\",\n            block: \"start\",\n          });\n        }, 50);\n      }\n      //#endregion open thread + messages\n    }\n    dispatchEvent(\"threadClicked\", {\n      event,\n      thread: activeThread,\n    });\n    currentTooltipId = \"\";\n  }\n\n  async function toggleUnreadStatus(event: MouseEvent | KeyboardEvent) {\n    if (activeThread) {\n      activeThread = { ...activeThread, unread: !activeThread.unread };\n      await saveActiveThread();\n      dispatchEvent(\"toggleThreadUnreadStatus\", {\n        event,\n        thread: activeThread,\n      });\n      return;\n    }\n  }\n\n  async function deleteEmail(event: MouseEvent) {\n    if (_this.click_action !== \"mailbox\") {\n      if (trashLabelID) {\n        const existingLabelIds = activeThread.labels?.map((i) => i.id) || [];\n        activeThread.label_ids = [...existingLabelIds, trashLabelID];\n      } else if (trashFolderID) {\n        activeThread.folder_id = trashFolderID;\n      }\n      await saveActiveThread();\n    }\n    dispatchEvent(\"threadDeleted\", {\n      event,\n      thread: activeThread,\n    });\n  }\n\n  function handleThreadClick(event: MouseEvent) {\n    if (\n      (_this.message && (!_this.thread_id || !_this.thread)) ||\n      (_this.click_action === \"mailbox\" && activeThread.expanded)\n    ) {\n      return;\n    }\n    event.preventDefault();\n    handleThread(event);\n  }\n\n  function returnToMailbox(event: MouseEvent | KeyboardEvent) {\n    dispatchEvent(\"returnToMailbox\", {\n      event,\n      thread: activeThread,\n    });\n  }\n\n  function handleThreadKeypress(event: KeyboardEvent) {\n    if (\n      (_this.message && (!_this.thread_id || !_this.thread)) ||\n      (_this.click_action === \"mailbox\" && activeThread.expanded)\n    ) {\n      return;\n    }\n    event.preventDefault();\n    if (event.code === \"Enter\") {\n      handleThread(event);\n    }\n  }\n\n  async function handleThreadStarClick(event: MouseEvent) {\n    event.stopImmediatePropagation();\n    //#region starred/unstarred\n    if (activeThread) {\n      activeThread = { ...activeThread, starred: !activeThread.starred };\n      await saveActiveThread();\n    }\n    //#endregion starred/unstarred\n\n    dispatchEvent(\"threadStarred\", {\n      event,\n      thread: activeThread,\n    });\n  }\n\n  function handleEmailClick(event: MouseEvent, msgIndex: number) {\n    event.stopImmediatePropagation();\n\n    if (msgIndex === activeThread.messages.length - 1) {\n      doNothing(event);\n    } else {\n      activeThread.messages[msgIndex].expanded =\n        !activeThread.messages[msgIndex].expanded;\n      dispatchEvent(\"messageClicked\", {\n        event,\n        message: activeThread.messages[msgIndex],\n        thread: activeThread,\n      });\n      // Don't fetch message when thread is being passed manually\n      if (!_this.thread) {\n        fetchIndividualMessage(\n          msgIndex,\n          activeThread.messages[msgIndex].id,\n        ).then((res) => {\n          activeThread.messages[msgIndex].body = res;\n        });\n      }\n    }\n  }\n\n  function handleEmailKeypress(event: KeyboardEvent, msgIndex: number) {\n    event.stopImmediatePropagation();\n    if (event.code === \"Enter\") {\n      if (msgIndex === activeThread.messages.length - 1) {\n        doNothing(event);\n      } else {\n        activeThread.messages[msgIndex].expanded =\n          !activeThread.messages[msgIndex].expanded;\n      }\n    }\n  }\n\n  function fetchIndividualMessage(\n    msgIndex: number,\n    messageID: string,\n  ): Promise<string | null> {\n    if (id) {\n      messageLoadStatus[msgIndex] = \"loading\";\n      return fetchMessage(query, messageID).then(async (json) => {\n        messageLoadStatus[msgIndex] = \"loaded\";\n        if (FilesStore.hasInlineFiles(json)) {\n          const messageWithInlineFiles = await getMessageWithInlineFiles(json);\n          return messageWithInlineFiles.body;\n        }\n        return json.body;\n      });\n    }\n    return new Promise(() => null);\n  }\n\n  function doNothing(e: MouseEvent | KeyboardEvent) {\n    e.stopImmediatePropagation();\n  }\n\n  // For cases when someone wants to show just a single email message, rather than the full thread.\n  function fetchOneMessage() {\n    fetchEmail({\n      access_token,\n      component_id: id,\n      message_id: _this.message_id,\n    }).then(async (json) => {\n      _this.message = json;\n      messageLoadStatus[0] = \"loaded\";\n      if (FilesStore.hasInlineFiles(_this.message)) {\n        const message = await getMessageWithInlineFiles(_this.message);\n        _this.message = message;\n      }\n    });\n  }\n\n  const weekdays = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n  function formatPreviewDate(date: Date): string {\n    const today = new Date(new Date().setHours(0, 0, 0, 0));\n    const yesterday = new Date(\n      today.getFullYear(),\n      today.getMonth(),\n      today.getDate() - 1,\n      0,\n      0,\n      0,\n      0,\n    );\n    const lastWeek = new Date(\n      today.getFullYear(),\n      today.getMonth(),\n      today.getDate() - 6,\n      0,\n      0,\n      0,\n      0,\n    );\n    const thisYear = new Date(today.getFullYear(), 0, 1);\n\n    if (date >= today) {\n      return date.toLocaleTimeString(\"en-US\", {\n        hour12: true,\n        hour: \"numeric\",\n        minute: \"2-digit\",\n      });\n    } else if (date >= yesterday) {\n      return \"Yesterday\";\n    } else if (date >= lastWeek) {\n      return weekdays[date.getDay()];\n    } else if (date >= thisYear) {\n      return date.toLocaleDateString(\"en-US\", {\n        month: \"long\",\n        day: \"numeric\",\n      });\n    } else {\n      return date.toLocaleDateString(\"en-US\", {\n        month: \"long\",\n        day: \"numeric\",\n        year: \"numeric\",\n      });\n    }\n  }\n\n  function formatExpandedDate(date: Date): string {\n    return (\n      date.toLocaleDateString(\"en-US\", {\n        weekday: \"short\",\n        month: \"long\",\n        day: \"numeric\",\n      }) +\n      \", \" +\n      date.toLocaleTimeString(\"en-US\", {\n        hour12: true,\n        hour: \"numeric\",\n        minute: \"2-digit\",\n      })\n    );\n  }\n\n  let currentTooltipId: string = \"\";\n  function setTooltip(event: any) {\n    currentTooltipId = event.detail.tooltipID;\n  }\n\n  function showFirstFromParticipant(messages: Message[]) {\n    return (\n      messages &&\n      participants &&\n      messages.length > 0 &&\n      messages[messages.length - 1]?.from.length\n    );\n  }\n\n  function showSecondFromParticipant(\n    messages: Message[],\n    participants: Participant[],\n  ) {\n    return (\n      messages &&\n      participants &&\n      messages.length > 1 &&\n      participants.length >= 2 &&\n      messages[0]?.from.length &&\n      participants[0].email !== messages[messages.length - 1]?.from[0].email\n    );\n  }\n\n  let attachedFiles: Record<string, File[]> = {};\n\n  $: activeThread ? initializeAttachedFiles() : \"\";\n\n  function initializeAttachedFiles() {\n    attachedFiles = activeThread.messages?.reduce(\n      (files: Record<string, File[]>, message) => {\n        for (const [fileIndex, file] of message.files.entries()) {\n          if (\n            file.content_disposition === \"attachment\" &&\n            !file.content_id && // treat all files with content_id as inline\n            !DisallowedContentTypes.includes(file.content_type)\n          ) {\n            if (!files[message.id]) {\n              files[message.id] = [];\n            }\n            files[message.id].push(message.files[fileIndex]);\n          }\n        }\n        return files;\n      },\n      {},\n    );\n  }\n\n  async function getMessageWithInlineFiles(message: Message): Promise<Message> {\n    const fetchedFiles = await FilesStore.getFilesForMessage(message, {\n      component_id: id,\n      access_token,\n    });\n    for (const file of Object.values(fetchedFiles)) {\n      if (message.body) {\n        message.body = message.body?.replaceAll(\n          `src=\"cid:${file.content_id}\"`,\n          `src=\"data:${file.content_type};base64,${file.data}\"`,\n        );\n      }\n    }\n    return message;\n  }\n\n  async function downloadSelectedFile(event: MouseEvent, file: File) {\n    event.stopImmediatePropagation();\n    if (id && ((activeThread && _this.thread_id) || _this.message_id)) {\n      const downloadedFileData = await downloadFile({\n        file_id: file.id,\n        component_id: id,\n        access_token,\n      });\n      downloadAttachedFile(downloadedFileData, file);\n    }\n    dispatchEvent(\"downloadClicked\", {\n      event,\n      thread: activeThread,\n      file,\n    });\n  }\n\n  async function handleDownloadFromMessage(event: MouseEvent) {\n    const file = (<any>event.detail).file;\n    downloadSelectedFile(event, file);\n  }\n\n  function isThreadADraftEmail(currentThread: Thread): boolean {\n    return (\n      currentThread &&\n      currentThread.labels?.find((label) => label.name === \"drafts\")\n    );\n  }\n</script>\n\n<style lang=\"scss\">\n  @use \"sass:list\";\n  @import \"../../theming/reset.scss\";\n  @import \"../../theming/animation.scss\";\n  @import \"../../theming/variables.scss\";\n\n  $hover-outline-width: 2px;\n  $collapsed-height: 56px;\n  $mobile-collapsed-height: fit-content;\n  $spacing-xs: 0.5rem;\n  $spacing-s: 0.7rem;\n  $spacing-m: 1rem;\n  $spacing-l: 1.5rem;\n  $spacing-xl: 2.5rem;\n\n  main {\n    height: 100%;\n    width: 100%;\n    position: relative;\n    display: grid;\n    font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n    .email-row {\n      background: var(--nylas-email-background, var(--grey-lightest));\n      border: var(--nylas-email-border-style, 1px solid var(--grey-lighter));\n      border-left-width: var(--nylas-email-border-left-width, 1px);\n\n      nylas-tooltip {\n        position: relative;\n      }\n      .default-avatar {\n        background: var(--nylas-default-avatar-background, var(--blue));\n        border-radius: 50%;\n        color: var(--nylas-default-avatar-color, var(--white));\n        font-family: sans-serif;\n        font-size: 1rem;\n        font-weight: bold;\n        height: 31px;\n        line-height: 35px;\n        text-align: center;\n        text-transform: uppercase;\n        width: 32px;\n      }\n      header {\n        font-size: 1.2rem;\n        font-weight: 700;\n        padding: $spacing-xs;\n        padding-bottom: 0;\n      }\n      &.condensed {\n        height: $mobile-collapsed-height;\n        padding: $spacing-xs;\n        flex-wrap: wrap;\n        display: grid;\n        gap: $spacing-xs;\n        align-items: center;\n        grid-template-columns: fit-content(350px) 1fr;\n        &.disable-click {\n          cursor: not-allowed;\n          display: grid;\n          align-items: flex-start;\n          background: var(--grey-lighter);\n        }\n        .no-message-avatar-container {\n          display: grid;\n          &.show-star {\n            margin-left: calc(\n              25px + 0.5rem\n            ); //to account for space occupied by star\n          }\n          .default-avatar {\n            background: var(--red);\n            display: flex;\n            justify-content: center;\n            align-items: center;\n\n            &.draft {\n              background: var(--blue);\n            }\n          }\n        }\n        .no-messages-warning-container {\n          display: grid;\n          color: var(--red);\n          align-self: center;\n          &.draft {\n            color: var(--blue);\n          }\n        }\n        .from-star {\n          display: grid;\n          grid-template-columns: 25px auto;\n          column-gap: $spacing-xs;\n        }\n\n        .mobile-subject-snippet {\n          display: block;\n          font-size: 14px;\n          margin-top: $spacing-xs;\n          flex-basis: 100%;\n          grid-column-start: span 3;\n          .subject {\n            text-overflow: ellipsis;\n            white-space: nowrap;\n            overflow: hidden;\n            max-width: inherit;\n            display: block;\n            word-break: keep-all;\n          }\n\n          .snippet {\n            text-overflow: ellipsis;\n            overflow: hidden;\n            white-space: nowrap;\n            display: block;\n            max-width: inherit;\n            color: var(--nylas-email-snippet-color, var(--grey));\n            margin-top: 4px;\n          }\n          .attachment {\n            gap: 1rem;\n            display: flex;\n            overflow-x: scroll;\n\n            button {\n              height: fit-content;\n              width: max-content;\n              padding: 0.3rem 1rem;\n              border: 1px solid var(--grey);\n              border-radius: 30px;\n              background: white;\n              cursor: pointer;\n              &:hover {\n                background: var(--grey-light);\n              }\n            }\n            &.mobile {\n              display: flex;\n            }\n          }\n        }\n\n        .thread-message-count {\n          color: var(--nylas-email-thread-message-count-color, var(--black));\n          font-size: 12px;\n          align-self: center;\n        }\n        &.unread {\n          background: var(--nylas-email-unread-background, white);\n\n          .from-message-count,\n          .date,\n          .subject {\n            font-weight: 600;\n            color: var(--nylas-email-subject-color, var(--black));\n\n            .thread-message-count {\n              color: var(\n                --nylas-email-unread-thread-message-count-color,\n                var(--blue)\n              );\n            }\n          }\n        }\n      }\n      div.starred {\n        position: relative;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        button {\n          background-color: transparent;\n          cursor: pointer;\n          &:before {\n            content: \"\\2605\";\n            display: inline-block;\n            font-size: 1.1em;\n            color: var(--nylas-email-unstarred-star-button-color, #ccc);\n            -webkit-user-select: none;\n            -moz-user-select: none;\n            user-select: none;\n          }\n\n          &.starred:before {\n            color: var(--nylas-email-star-button-color, #ffc107);\n          }\n        }\n      }\n      &.expanded {\n        background: var(--nylas-email-body-background, var(--white));\n        padding: 0;\n        $outline-style: 1px solid var(--grey-lighter);\n        @mixin barStyle {\n          outline: $outline-style;\n          display: flex;\n          align-items: center;\n          padding: 24px 16px;\n          gap: 8px;\n        }\n\n        .email-loader {\n          height: 3rem;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n\n          .spinner {\n            height: 18px;\n            animation: rotate 2s linear infinite;\n            margin-right: 10px;\n          }\n        }\n        @keyframes rotate {\n          to {\n            transform: rotate(360deg);\n          }\n        }\n\n        header {\n          @include barStyle;\n          border-radius: 4px 4px 0 0;\n          font-weight: bold;\n        }\n\n        [role=\"toolbar\"] {\n          @include barStyle;\n          padding: $spacing-s $spacing-m;\n          gap: $spacing-m;\n        }\n\n        .subject-title {\n          justify-content: space-between;\n          &.mailbox {\n            cursor: default;\n          }\n          & > div {\n            display: flex;\n            align-items: center;\n            gap: $spacing-m;\n\n            button {\n              background: none;\n              display: flex;\n              cursor: pointer;\n            }\n          }\n          [role=\"toolbar\"] {\n            outline: none;\n            button {\n              * {\n                width: 1em;\n                height: 1em;\n              }\n            }\n          }\n        }\n\n        .icon-container,\n        .icon-container > * {\n          pointer-events: none;\n        }\n        &.expanded-mailbox-thread {\n          .message-from {\n            .name {\n              font-weight: 600;\n            }\n          }\n        }\n        div.individual-message {\n          box-sizing: border-box;\n          padding: $spacing-xs;\n\n          div.message-body {\n            overflow: auto;\n            display: inline-flex;\n            flex-direction: column;\n            width: 100%;\n            div.attachment {\n              overflow-x: scroll;\n              button {\n                margin: $spacing-xs;\n                height: fit-content;\n                padding: 0.3rem 1rem;\n                border: 1px solid var(--grey);\n                border-radius: 30px;\n                background: white;\n                cursor: pointer;\n                &:hover {\n                  background: var(--grey-light);\n                }\n              }\n            }\n          }\n\n          &.condensed {\n            div.snippet {\n              text-overflow: ellipsis;\n              overflow: hidden;\n              display: block;\n              max-width: inherit;\n              color: var(--nylas-email-snippet-color, var(--grey));\n              margin-top: $spacing-xs;\n            }\n            div.message-head {\n              .avatar-from {\n                display: flex;\n                align-items: center;\n                gap: $spacing-s;\n              }\n            }\n          }\n          &:not(:last-of-type) {\n            border-bottom: 1px solid #eee;\n          }\n          &:not(.last-message) {\n            &.expanded {\n              div.message-head:hover {\n                cursor: n-resize;\n              }\n            }\n          }\n          &.last-message {\n            .message-head:hover,\n            .message-body:hover {\n              cursor: default;\n            }\n          }\n\n          div.message-head {\n            display: flex;\n            justify-content: space-between;\n            align-items: baseline;\n            gap: $spacing-xs;\n          }\n          div.message-date {\n            display: flex;\n            color: var(--nylas-email-message-date-color, var(--grey));\n            font-size: 12px;\n          }\n\n          div.message-from {\n            display: flex;\n            align-items: center;\n            span {\n              &.name {\n                font-weight: 600;\n                margin-right: 0.5rem;\n              }\n            }\n          }\n        }\n        &.expanded {\n          div.message-head {\n            div.message-from-to {\n              margin: 0.5rem 0;\n              .avatar-from {\n                display: flex;\n                align-items: center;\n                gap: $spacing-s;\n              }\n              div.message-to {\n                color: var(--nylas-email-message-to-color, var(--grey));\n                max-width: 150px;\n                margin-left: calc(32px + 0.7rem);\n                div {\n                  display: grid;\n                  grid-template-columns: 1fr 16px;\n\n                  span {\n                    text-overflow: ellipsis;\n                    overflow: hidden;\n                  }\n                }\n              }\n            }\n          }\n          &.condensed {\n            gap: 1rem;\n            &:hover,\n            &:focus {\n              cursor: s-resize;\n              outline: none;\n            }\n            span.snippet {\n              overflow: hidden;\n              text-overflow: ellipsis;\n              white-space: nowrap;\n              color: var(--nylas-email-snippet-color, var(--grey));\n              span.initial {\n                display: none;\n              }\n              span.loading {\n                display: inline-block;\n              }\n            }\n          }\n        }\n      }\n      &:hover {\n        cursor: pointer;\n      }\n      .from-message-count {\n        align-items: center;\n        display: grid;\n        grid-template-columns: repeat(3, auto);\n        grid-gap: $spacing-m;\n        justify-content: flex-start;\n        max-width: 350px;\n\n        .from-participants {\n          max-width: 220px;\n          display: grid;\n          grid-template-columns: 1fr fit-content(60px);\n          .participants-name {\n            .from-sub-section.second {\n              display: none;\n            }\n          }\n          .participants-count {\n            .show-on-mobile {\n              display: inline-block;\n            }\n            .show-on-desktop {\n              display: none;\n            }\n          }\n        }\n      }\n      .subject-snippet-date {\n        .desktop-subject-snippet {\n          display: none;\n        }\n        .attachment {\n          &.desktop {\n            display: none;\n          }\n        }\n        div {\n          overflow: hidden;\n          text-overflow: ellipsis;\n          white-space: nowrap;\n          span.snippet {\n            color: var(--nylas-email-snippet-color, var(--grey));\n          }\n          &.date {\n            display: flex;\n            justify-content: flex-end;\n            gap: $spacing-xs;\n            width: 100%;\n            font-size: 14px;\n            color: var(--nylas-email-message-date-color, var(--grey));\n          }\n          &.action-icons {\n            display: flex;\n            justify-content: flex-end;\n            align-items: center;\n            width: 100%;\n            gap: 1rem;\n            & > :last-child {\n              padding-right: 1rem;\n            }\n            button {\n              background: none;\n              cursor: pointer;\n              display: flex;\n\n              * {\n                width: 1em;\n                height: 1em;\n              }\n            }\n          }\n        }\n      }\n      &.expanded.singular {\n        &:hover {\n          box-shadow: none;\n          cursor: default;\n        }\n        div.individual-message:not(.last-message).expanded {\n          .message-head:hover,\n          .message-body:hover {\n            cursor: default;\n          }\n        }\n      }\n    }\n  }\n\n  @media #{$desktop} {\n    main {\n      .email-row {\n        .from-message-count {\n          max-width: 350px;\n          .from-participants {\n            .participants-name {\n              overflow: hidden;\n              white-space: nowrap;\n              position: relative;\n              .from-sub-section.second {\n                display: inline-block;\n              }\n              &.condensed::after {\n                content: \".\";\n                position: absolute;\n                bottom: 0;\n                right: 0;\n                background: var(--nylas-email-body-background, var(--white));\n              }\n            }\n            .participants-count {\n              .show-on-mobile {\n                display: none;\n              }\n              .show-on-desktop {\n                display: inline-block;\n              }\n            }\n          }\n        }\n\n        &.expanded.singular {\n          .individual-message.expanded {\n            padding-top: $spacing-xs;\n          }\n        }\n        &.condensed {\n          display: grid;\n          column-gap: $spacing-m;\n          grid-template-columns: fit-content(350px) 1fr;\n          padding: $spacing-xs 0;\n          justify-content: initial;\n          div.starred {\n            button {\n              &:hover:before {\n                color: var(--nylas-email-star-button-hover-color, #ffc107);\n              }\n            }\n          }\n\n          .mobile-subject-snippet {\n            display: none;\n          }\n        }\n\n        &.expanded {\n          display: flex;\n          flex-direction: column;\n          box-sizing: border-box;\n          width: 100%;\n          overflow-x: hidden;\n          header {\n            padding: $spacing-m $spacing-xl;\n          }\n          div.individual-message {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            padding: $spacing-m 0;\n            width: inherit;\n            div.message-head,\n            div.message-body {\n              width: 100%;\n              box-sizing: border-box;\n              padding: 0 $spacing-xl;\n            }\n            div.message-body {\n              display: flex;\n              flex-direction: column;\n            }\n\n            &.condensed {\n              div.snippet {\n                width: 100%;\n                box-sizing: border-box;\n                padding: 0 $spacing-xl;\n                white-space: pre-wrap;\n                max-width: 95vw;\n                align-self: flex-start;\n              }\n            }\n\n            div.message-date {\n              font-size: 14px;\n              align-self: center;\n            }\n            &.expanded {\n              div.message-head {\n                div.message-from-to {\n                  margin: $spacing-xs 0;\n                  div.message-to {\n                    max-width: inherit;\n                    overflow: inherit;\n                    div {\n                      display: grid;\n                      grid-template-columns: 1fr 16px;\n                      align-items: center;\n\n                      span {\n                        text-overflow: ellipsis;\n                        overflow: hidden;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        .subject-snippet-date {\n          display: grid;\n          grid-template-columns: 1fr fit-content(120px);\n          gap: 1rem;\n          padding: $spacing-xs;\n          .desktop-subject-snippet {\n            display: block;\n\n            .subject {\n              margin-right: $spacing-xs;\n            }\n          }\n          .snippet-attachment-container {\n            display: flex;\n            flex-direction: column;\n            gap: $spacing-xs;\n          }\n          .attachment {\n            gap: 1rem;\n            display: flex;\n            overflow-x: scroll;\n\n            button {\n              padding: 0.3rem 1rem;\n              border: 1px solid var(--grey);\n              border-radius: 30px;\n              background: white;\n              cursor: pointer;\n              &:hover {\n                background: var(--grey-light);\n              }\n            }\n            &.desktop {\n              display: flex;\n            }\n          }\n          .date {\n            text-align: right;\n          }\n        }\n      }\n    }\n  }\n</style>\n\n<nylas-error {id} />\n<main\n  bind:this={main}\n  on:click={handleThreadClick}\n  tabindex=\"0\"\n  on:keypress={handleThreadKeypress}\n>\n  {#if _this.thread || _this.thread_id}\n    {#await activeThread}\n      Loading...\n    {:then thread}\n      {#if thread && activeThread}\n        {#if activeThread.expanded}\n          <div\n            class=\"email-row expanded {_this.click_action === 'mailbox'\n              ? 'expanded-mailbox-thread'\n              : ''}\"\n          >\n            <header\n              class=\"subject-title\"\n              class:mailbox={_this.click_action === \"mailbox\"}\n            >\n              <div>\n                {#if _this.click_action === \"mailbox\"}\n                  <button\n                    title={\"Return to Mailbox\"}\n                    aria-label={\"Return to Mailbox\"}\n                    on:click|stopPropagation={returnToMailbox}\n                  >\n                    <LeftArrowLineIcon />\n                  </button>\n                {/if}\n                <h1>{thread?.subject}</h1>\n              </div>\n              <div role=\"toolbar\">\n                {#if _this.show_star}\n                  <div class=\"starred\">\n                    <button\n                      class={thread.starred ? \"starred\" : \"\"}\n                      title={thread.starred ? \"Unstar thread\" : \"Star thread\"}\n                      aria-label={thread.starred\n                        ? \"Unstar thread\"\n                        : \"Star thread\"}\n                      role=\"switch\"\n                      aria-checked={thread.starred}\n                      on:click|stopPropagation={handleThreadStarClick}\n                    />\n                  </div>\n                {/if}\n                {#if _this.show_thread_actions}\n                  <div class=\"delete\">\n                    <button\n                      title=\"Delete thread / Move to trash\"\n                      aria-label=\"Delete thread (Move to trash)\"\n                      on:click|stopPropagation={(e) => deleteEmail(e)}\n                    >\n                      <TrashIcon />\n                    </button>\n                  </div>\n                  <div class=\"read-status\">\n                    <button\n                      title={`Mark thread as ${\n                        activeThread.unread ? \"\" : \"un\"\n                      }read`}\n                      aria-label={`Mark thread as ${\n                        activeThread.unread ? \"\" : \"un\"\n                      }read`}\n                      on:click|stopPropagation={toggleUnreadStatus}\n                    >\n                      {#if activeThread.unread}\n                        <MarkReadIcon aria-hidden=\"true\" />\n                      {:else}\n                        <MarkUnreadIcon aria-hidden=\"true\" />\n                      {/if}\n                    </button>\n                  </div>\n                {/if}\n              </div>\n            </header>\n            {#if activeThread.messages.length}\n              {#each activeThread.messages as message, msgIndex}\n                <div\n                  class:last-message={msgIndex ===\n                    activeThread.messages.length - 1}\n                  class={`individual-message ${\n                    msgIndex === activeThread.messages.length - 1 ||\n                    message.expanded\n                      ? \"expanded\"\n                      : \"condensed\"\n                  }`}\n                  bind:this={messageRefs[msgIndex]}\n                  on:click|stopPropagation={(e) =>\n                    handleEmailClick(e, msgIndex)}\n                  on:keypress={(e) => handleEmailKeypress(e, msgIndex)}\n                >\n                  {#if message.expanded || msgIndex === activeThread.messages.length - 1}\n                    <div class=\"message-head\">\n                      <div class=\"message-from-to\">\n                        <div class=\"avatar-from\">\n                          {#if _this.show_contact_avatar}\n                            <div class=\"default-avatar\">\n                              <nylas-contact-image\n                                {contact_query}\n                                contact={contacts[message?.from[0].email]}\n                              />\n                            </div>\n                          {/if}\n                          <div class=\"message-from\">\n                            <span class=\"name\">\n                              {userEmail && message?.from[0].email === userEmail\n                                ? \"me\"\n                                : message?.from[0].name ||\n                                  message?.from[0].email}\n                            </span>\n                            <!-- tooltip component -->\n                            <nylas-tooltip\n                              on:toggleTooltip={setTooltip}\n                              id={message?.id.slice(0, 3)}\n                              current_tooltip_id={currentTooltipId}\n                              icon={DropdownSymbol}\n                              content={message?.from[0].email}\n                            />\n                          </div>\n                        </div>\n                        <div class=\"message-to\">\n                          {#each message?.to.slice(0, PARTICIPANTS_TO_TRUNCATE) as to, i}\n                            <div>\n                              <span>\n                                {i === 0 ? \"to \" : \"\"}\n                                {#if _this.you && to?.email === _this.you.email_address}\n                                  Me\n                                {/if}\n                                {#if to.email && to.name}\n                                  {to.name ?? _this.you.name} &lt;{to.email}&gt;\n                                {:else if to.email && !to.name}\n                                  {to.email}\n                                {/if}\n                              </span>\n                            </div>\n                          {/each}\n                          {#if message.to?.length > PARTICIPANTS_TO_TRUNCATE}\n                            <div>\n                              <nylas-tooltip\n                                on:toggleTooltip={setTooltip}\n                                id={`show-more-participants-${message.id}`}\n                                current_tooltip_id={currentTooltipId}\n                                icon={DropdownSymbol}\n                                text={`And ${\n                                  message.to?.length - PARTICIPANTS_TO_TRUNCATE\n                                } more`}\n                                content={`${message.to\n                                  .map((to) => `${to.name} ${to.email}`)\n                                  .join(\", \")}`}\n                              />\n                            </div>\n                          {/if}\n                        </div>\n                      </div>\n                      <div class=\"message-date\">\n                        <span>\n                          {formatExpandedDate(\n                            new Date(message.date * 1000),\n                          )}</span\n                        >\n                      </div>\n                    </div>\n                    <div class=\"message-body\">\n                      {#if _this.clean_conversation && message.conversation}\n                        {@html DOMPurify.sanitize(message.conversation)}\n                      {:else if message && message.body != null}\n                        <nylas-message-body\n                          {message}\n                          body={message.body}\n                          on:downloadClicked={handleDownloadFromMessage}\n                        />\n                        <!-- If a thread is being passed manually and there is no body, \n                          we will keep loading, so the below is our fallback -->\n                      {:else if !!_this.thread && !_this.thread_id && click_action != \"mailbox\"}\n                        {message.body ?? message.snippet}\n                        {#await attachedFiles[message.id] then files}\n                          {#if files && Array.isArray(files) && files.length > 0}\n                            <div class=\"attachment\">\n                              {#each files as file}\n                                <button\n                                  on:click|stopPropagation={(e) =>\n                                    dispatchEvent(\"fileClicked\", {\n                                      event: e,\n                                      file: file,\n                                    })}\n                                >\n                                  {file.filename || file.id}\n                                </button>\n                              {/each}\n                            </div>\n                          {/if}\n                        {/await}\n                      {:else}\n                        <div class=\"email-loader\">\n                          <LoadingIcon class=\"spinner\" />\n                          Loading...\n                        </div>\n                      {/if}\n                    </div>\n                  {:else}\n                    <div class=\"message-head\">\n                      <div class=\"avatar-from\">\n                        {#if _this.show_contact_avatar}\n                          <div class=\"default-avatar\">\n                            <nylas-contact-image\n                              {contact_query}\n                              contact={contacts[message?.from[0].email]}\n                            />\n                          </div>\n                        {/if}\n                        <div class=\"message-from\">\n                          <span class=\"name\"\n                            >{userEmail && message?.from[0].email === userEmail\n                              ? \"me\"\n                              : message?.from[0].name ||\n                                message?.from[0].email}</span\n                          >\n                          <!-- tooltip component -->\n                          <nylas-tooltip\n                            on:toggleTooltip={setTooltip}\n                            id={message?.id.slice(0, 3)}\n                            current_tooltip_id={currentTooltipId}\n                            icon={DropdownSymbol}\n                            content={message?.from[0].email}\n                          />\n                        </div>\n                      </div>\n                      <div class=\"message-date\">\n                        <span>\n                          {formatExpandedDate(new Date(message.date * 1000))}\n                        </span>\n                      </div>\n                    </div>\n                    <div class=\"snippet\">\n                      {message.snippet}\n                    </div>\n                  {/if}\n                </div>\n              {/each}\n            {:else}\n              <span class=\"snippet\">{thread.snippet}</span>\n            {/if}\n          </div>\n        {:else}\n          <div\n            class=\"email-row condensed\"\n            class:show_star={_this.show_star}\n            class:unread={activeThread.unread}\n            class:disable-click={activeThread &&\n              activeThread.messages.length <= 0}\n          >\n            {#if activeThread && activeThread.messages.length <= 0}\n              {#await isThreadADraftEmail(activeThread) then isDraft}\n                <div\n                  class={`no-message-avatar-container ${\n                    _this.show_star ? \"show-star\" : \"\"\n                  }`}\n                >\n                  <div class=\"default-avatar\" class:draft={isDraft}>\n                    {#if isDraft}\n                      <DraftIcon />\n                    {:else}\n                      <NoMessagesIcon />\n                    {/if}\n                  </div>\n                </div>\n                <div\n                  class=\"no-messages-warning-container\"\n                  class:draft={isDraft}\n                >\n                  {isDraft\n                    ? `This is a draft email.`\n                    : `Sorry, looks like this thread is currently unavailable. It may\n                  have been deleted in your provider inbox.`}\n                </div>\n              {/await}\n            {:else}\n              <div class=\"from{_this.show_star ? '-star' : ''}\">\n                {#if _this.show_star}\n                  <div class=\"starred\">\n                    <button\n                      id={`thread-star-${_this.thread_id}`}\n                      class={activeThread.starred ? \"starred\" : \"\"}\n                      value={_this.thread_id}\n                      role=\"switch\"\n                      aria-checked={activeThread.starred}\n                      on:click|preventDefault={handleThreadStarClick}\n                      aria-label={`Star button for thread ${_this.thread_id}`}\n                    />\n                  </div>\n                {/if}\n                <div class=\"from-message-count\">\n                  {#if _this.show_contact_avatar}\n                    <div class=\"default-avatar\">\n                      <nylas-contact-image\n                        {contact_query}\n                        contact={activeThreadContact}\n                      />\n                    </div>\n                  {/if}\n                  <div class=\"from-participants\">\n                    <div\n                      class=\"participants-name\"\n                      class:condensed={showSecondFromParticipant(\n                        activeThread.messages,\n                        activeThread.participants,\n                      )}\n                    >\n                      {#if showFirstFromParticipant(activeThread.messages)}\n                        <span class=\"from-sub-section\">\n                          {activeThread.messages[\n                            activeThread.messages.length - 1\n                          ]?.from[0].name ||\n                            activeThread.messages[\n                              activeThread.messages.length - 1\n                            ]?.from[0].email}\n                        </span>\n                      {/if}\n                      {#if showSecondFromParticipant(activeThread.messages, activeThread.participants)}\n                        <span class=\"from-sub-section second\"\n                          >, {activeThread.participants[0].name ||\n                            activeThread.participants[0].email}\n                        </span>\n                      {/if}\n                    </div>\n                    <div class=\"participants-count\">\n                      {#if showSecondFromParticipant(activeThread.messages, activeThread.participants)}\n                        <!-- If it is mobile, we only show 1 participant (latest from message), hence -1 -->\n                        {#if activeThread.participants.length >= 2}\n                          <span class=\"show-on-mobile\">\n                            &nbsp;&plus;{activeThread.participants.length -\n                              MAX_MOBILE_PARTICIPANTS}\n                          </span>\n                        {/if}\n                        <!-- If it is desktop, we only show upto 2 participants (latest from message), hence -2. \n                    Note that this might not be exactly correct if the name of the first participant is too long \n                    and occupies entire width -->\n                        {#if activeThread.participants.length > 2}\n                          <span class=\"show-on-desktop\">\n                            &nbsp; &plus; {activeThread.participants.length -\n                              MAX_DESKTOP_PARTICIPANTS}\n                          </span>\n                        {/if}\n                      {/if}\n                    </div>\n                  </div>\n                  {#if _this.show_number_of_messages && activeThread?.messages?.length > 0}\n                    <span class=\"thread-message-count\">\n                      {activeThread.messages.length}\n                    </span>\n                  {/if}\n                </div>\n              </div>\n              <div class=\"subject-snippet-date\">\n                <div class=\"snippet-attachment-container\">\n                  <div class=\"desktop-subject-snippet\">\n                    <span class=\"subject\">{thread?.subject}</span>\n                    <span class=\"snippet\">\n                      {thread.snippet}\n                    </span>\n                  </div>\n                  {#if Object.keys(attachedFiles).length > 0}\n                    <div class=\"attachment desktop\">\n                      {#each Object.values(attachedFiles) as files}\n                        {#each files as file}\n                          <button\n                            on:click={(event) =>\n                              downloadSelectedFile(event, file)}\n                          >\n                            {file.filename || file.id}\n                          </button>\n                        {/each}\n                      {/each}\n                    </div>\n                  {/if}\n                </div>\n                <div\n                  class:date={_this.show_received_timestamp}\n                  class:action-icons={_this.show_thread_actions}\n                >\n                  {#if activeThread.has_attachments && Object.keys(attachedFiles).length > 0}\n                    <span><AttachmentIcon /></span>\n                  {/if}\n                  {#if _this.show_thread_actions}\n                    <div class=\"delete\">\n                      <button\n                        title=\"Delete thread\"\n                        aria-label=\"Delete thread\"\n                        on:click|stopPropagation={deleteEmail}\n                      >\n                        <TrashIcon />\n                      </button>\n                    </div>\n                    <div class=\"read-status\">\n                      <button\n                        title={`Mark thread as ${\n                          activeThread.unread ? \"\" : \"un\"\n                        }read`}\n                        aria-label={`Mark thread as ${\n                          activeThread.unread ? \"\" : \"un\"\n                        }read`}\n                        on:click|stopPropagation={toggleUnreadStatus}\n                      >\n                        {#if activeThread.unread}\n                          <MarkReadIcon aria-hidden=\"true\" />\n                        {:else}\n                          <MarkUnreadIcon aria-hidden=\"true\" />\n                        {/if}\n                      </button>\n                    </div>\n                  {:else if _this.show_received_timestamp}\n                    <span>\n                      {formatPreviewDate(\n                        new Date(thread.last_message_timestamp * 1000),\n                      )}\n                    </span>\n                  {/if}\n                </div>\n              </div>\n\n              <div class=\"mobile-subject-snippet\">\n                <span class=\"subject\">{thread?.subject}</span>\n                <span class=\"snippet\">\n                  {thread.snippet}\n                </span>\n                {#if Object.keys(attachedFiles).length > 0}\n                  <div class=\"attachment mobile\">\n                    {#each Object.values(attachedFiles) as files}\n                      {#each files as file}\n                        <button\n                          on:click={(event) =>\n                            downloadSelectedFile(event, file)}\n                        >\n                          {file.filename || file.id}\n                        </button>\n                      {/each}\n                    {/each}\n                  </div>\n                {/if}\n              </div>\n            {/if}\n          </div>\n        {/if}\n      {/if}\n    {/await}\n  {:else if _this.message}\n    {#if Object.keys(_this.message).length > 0}\n      <div class=\"email-row expanded singular\">\n        <header>{_this.message?.subject}</header>\n        <div class=\"individual-message expanded\">\n          <div class=\"message-head\">\n            <div class=\"message-from-to\">\n              <div class=\"avatar-from\">\n                {#if _this.show_contact_avatar}\n                  <div class=\"default-avatar\">\n                    <nylas-contact-image\n                      {contact_query}\n                      contact={activeMessageContact}\n                    />\n                  </div>\n                {/if}\n                <div class=\"message-from\">\n                  <span class=\"name\"\n                    >{userEmail && message?.from[0].email === userEmail\n                      ? \"me\"\n                      : _this.message?.from[0]?.name ||\n                        _this.message?.from[0]?.email}</span\n                  >\n                  <!-- tooltip component -->\n                  <nylas-tooltip\n                    on:toggleTooltip={setTooltip}\n                    id={_this.message?.id}\n                    current_tooltip_id={currentTooltipId}\n                    icon={DropdownSymbol}\n                    content={_this.message?.from[0].email}\n                  />\n                </div>\n              </div>\n\n              <div class=\"message-to\">\n                {#each message?.to.slice(0, PARTICIPANTS_TO_TRUNCATE) as to, i}\n                  <div>\n                    <span>\n                      {i === 0 ? \"to \" : \"\"}\n                      {#if _this.you && to?.email === _this.you.email_address}\n                        Me\n                      {/if}\n                      {#if to.email && to.name}\n                        {to.name ?? _this.you.name} &lt;{to.email}&gt;\n                      {:else if to.email && !to.name}\n                        {to.email}\n                      {/if}\n                    </span>\n                  </div>\n                {/each}\n                {#if message.to?.length > PARTICIPANTS_TO_TRUNCATE}\n                  <div>\n                    <nylas-tooltip\n                      on:toggleTooltip={setTooltip}\n                      id={`show-more-participants-${message.id}`}\n                      current_tooltip_id={currentTooltipId}\n                      icon={DropdownSymbol}\n                      text={`And ${\n                        message.to?.length - PARTICIPANTS_TO_TRUNCATE\n                      } more`}\n                      content={`${message.to\n                        .map((to) => `${to.name} ${to.email}`)\n                        .join(\", \")}`}\n                    />\n                  </div>\n                {/if}\n              </div>\n            </div>\n            {#if _this.show_received_timestamp}\n              <div class=\"message-date\">\n                <span>\n                  {formatPreviewDate(new Date(_this.message.date * 1000))}\n                </span>\n              </div>\n            {/if}\n          </div>\n          <div class=\"message-body\">\n            {#if _this.clean_conversation && message.conversation}\n              {@html DOMPurify.sanitize(_this.message?.conversation ?? \"\")}\n            {:else if _this.message}\n              <nylas-message-body\n                message={_this.message}\n                body={_this.message.body}\n                on:downloadClicked={handleDownloadFromMessage}\n              />\n            {/if}\n          </div>\n        </div>\n      </div>\n    {/if}\n  {/if}\n</main>\n","<svg width=\"12\" height=\"13\" viewBox=\"0 0 12 13\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M4.125 5.5625H7.875C8.0625 5.5625 8.25 5.39844 8.25 5.1875V4.8125C8.25 4.625 8.0625 4.4375 7.875 4.4375H4.125C3.91406 4.4375 3.75 4.625 3.75 4.8125V5.1875C3.75 5.39844 3.91406 5.5625 4.125 5.5625ZM3.75 7.4375C3.75 7.64844 3.91406 7.8125 4.125 7.8125H7.875C8.0625 7.8125 8.25 7.64844 8.25 7.4375V7.0625C8.25 6.875 8.0625 6.6875 7.875 6.6875H4.125C3.91406 6.6875 3.75 6.875 3.75 7.0625V7.4375ZM6 10.2969C5.60156 10.2969 5.22656 10.1797 4.89844 9.92188L0 6.38281V11.375C0 12.0078 0.492188 12.5 1.125 12.5H10.875C11.4844 12.5 12 12.0078 12 11.375V6.38281L7.07812 9.92188C6.75 10.1797 6.375 10.2969 6 10.2969ZM11.5547 4.32031C11.3438 4.17969 11.1562 4.01562 10.875 3.80469V2.75C10.875 2.14062 10.3594 1.625 9.75 1.625H7.92188C7.85156 1.57812 7.78125 1.53125 7.71094 1.48438C7.3125 1.20312 6.53906 0.5 6 0.5C5.4375 0.5 4.66406 1.20312 4.26562 1.48438C4.19531 1.53125 4.125 1.57812 4.05469 1.625H2.25C1.61719 1.625 1.125 2.14062 1.125 2.75V3.80469C0.820312 4.01562 0.632812 4.17969 0.421875 4.32031C0.164062 4.53125 0 4.85938 0 5.21094V5.46875L2.25 7.08594V2.75H9.75V7.08594L12 5.46875V5.21094C12 4.85938 11.8359 4.55469 11.5547 4.32031Z\" fill=\"#6A7285\"/>\n</svg>\n","<svg width=\"12\" height=\"9\" viewBox=\"0 0 12 9\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M11.7656 2.97656C11.2266 3.39844 10.5469 3.91406 8.15625 5.64844C7.6875 6 6.82031 6.77344 6 6.77344C5.15625 6.77344 4.3125 6 3.82031 5.64844C1.42969 3.91406 0.75 3.39844 0.210938 2.97656C0.117188 2.90625 0 2.97656 0 3.09375V7.875C0 8.50781 0.492188 9 1.125 9H10.875C11.4844 9 12 8.50781 12 7.875V3.09375C12 2.97656 11.8594 2.90625 11.7656 2.97656ZM6 6C6.53906 6.02344 7.3125 5.32031 7.71094 5.03906C10.8281 2.78906 11.0625 2.57812 11.7656 2.01562C11.9062 1.92188 12 1.75781 12 1.57031V1.125C12 0.515625 11.4844 0 10.875 0H1.125C0.492188 0 0 0.515625 0 1.125V1.57031C0 1.75781 0.0703125 1.92188 0.210938 2.01562C0.914062 2.57812 1.14844 2.78906 4.26562 5.03906C4.66406 5.32031 5.4375 6.02344 6 6Z\" fill=\"#6A7285\"/>\n</svg>\n","<svg id=\"Capa_1\" enable-background=\"new 0 0 497 497\" height=\"512\" viewBox=\"0 0 497 497\" width=\"512\" xmlns=\"http://www.w3.org/2000/svg\"><g><circle cx=\"98\" cy=\"376\" fill=\"#909ba6\" r=\"53\"/><circle cx=\"439\" cy=\"336\" fill=\"#c8d2dc\" r=\"46\"/><circle cx=\"397\" cy=\"112\" fill=\"#e9edf1\" r=\"38\"/><ellipse cx=\"56.245\" cy=\"244.754\" fill=\"#7e8b96\" rx=\"56.245\" ry=\"54.874\"/><ellipse cx=\"217.821\" cy=\"447.175\" fill=\"#a2abb8\" rx=\"51.132\" ry=\"49.825\"/><ellipse cx=\"349.229\" cy=\"427.873\" fill=\"#b9c3cd\" rx=\"48.575\" ry=\"47.297\"/><ellipse cx=\"117.092\" cy=\"114.794\" fill=\"#5f6c75\" rx=\"58.801\" ry=\"57.397\"/><ellipse cx=\"453.538\" cy=\"216.477\" fill=\"#dce6eb\" rx=\"43.462\" ry=\"42.656\"/><circle cx=\"263\" cy=\"62\" fill=\"#4e5a61\" r=\"62\"/></g></svg>","<svg width=\"11\" height=\"13\" viewBox=\"0 0 11 13\" fill=\"#8d94a5\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M0.75 11.375C0.75 12.0078 1.24219 12.5 1.875 12.5H8.625C9.23438 12.5 9.75 12.0078 9.75 11.375V3.5H0.75V11.375ZM7.125 5.375C7.125 5.1875 7.28906 5 7.5 5C7.6875 5 7.875 5.1875 7.875 5.375V10.625C7.875 10.8359 7.6875 11 7.5 11C7.28906 11 7.125 10.8359 7.125 10.625V5.375ZM4.875 5.375C4.875 5.1875 5.03906 5 5.25 5C5.4375 5 5.625 5.1875 5.625 5.375V10.625C5.625 10.8359 5.4375 11 5.25 11C5.03906 11 4.875 10.8359 4.875 10.625V5.375ZM2.625 5.375C2.625 5.1875 2.78906 5 3 5C3.1875 5 3.375 5.1875 3.375 5.375V10.625C3.375 10.8359 3.1875 11 3 11C2.78906 11 2.625 10.8359 2.625 10.625V5.375ZM10.125 1.25H7.3125L7.07812 0.828125C6.98438 0.640625 6.79688 0.5 6.58594 0.5H3.89062C3.67969 0.5 3.49219 0.640625 3.39844 0.828125L3.1875 1.25H0.375C0.164062 1.25 0 1.4375 0 1.625V2.375C0 2.58594 0.164062 2.75 0.375 2.75H10.125C10.3125 2.75 10.5 2.58594 10.5 2.375V1.625C10.5 1.4375 10.3125 1.25 10.125 1.25Z\" />\n</svg>\n","<svg width=\"29\" height=\"24\" viewBox=\"0 0 29 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M14 16L9.77612 12.0014L14 8\" stroke=\"#6A7285\" stroke-width=\"1.5\" stroke-miterlimit=\"10\"/>\n<path d=\"M19 16L14.7761 12.0014L19 8\" stroke=\"#6A7285\" stroke-width=\"1.5\" stroke-miterlimit=\"10\"/>\n</svg>\n","<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M14 16L9.77612 12.0014L14 8\" stroke=\"#6A7285\" stroke-width=\"1.5\" stroke-miterlimit=\"10\"/>\n</svg>\n","<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M10 8L14.2239 11.9986L10 16\" stroke=\"#6A7285\" stroke-width=\"1.5\" stroke-miterlimit=\"10\"/>\n</svg>\n","<svg width=\"29\" height=\"24\" viewBox=\"0 0 29 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M15 8L19.2239 11.9986L15 16\" stroke=\"#6A7285\" stroke-width=\"1.5\" stroke-miterlimit=\"10\"/>\n<path d=\"M10 8L14.2239 11.9986L10 16\" stroke=\"#6A7285\" stroke-width=\"1.5\" stroke-miterlimit=\"10\"/>\n</svg>\n","<svelte:options tag=\"pagination-nav\" />\n\n<script lang=\"ts\">\n  export let current_page: number = 0;\n  export let items_per_page: number;\n  export let num_pages: number = 1;\n  export let num_items: number;\n\n  import { getEventDispatcher } from \"@commons/methods/component\";\n  import { get_current_component } from \"svelte/internal\";\n\n  import FirstIcon from \"../assets/double-left-arrow.svg\";\n  import BackIcon from \"../assets/left-arrow.svg\";\n  import NextIcon from \"../assets/right-arrow.svg\";\n  import LastIcon from \"../assets/double-right-arrow.svg\";\n\n  const dispatchEvent = getEventDispatcher(get_current_component());\n\n  function changePage(newPage: number) {\n    dispatchEvent(\"changePage\", {\n      newPage,\n    });\n  }\n</script>\n\n<style lang=\"scss\">\n  .pagination-nav {\n    --disabled-text: ##454954;\n    --font: -apple-system, BlinkMacSystemFont, sans-serif;\n    display: flex;\n    align-items: center;\n\n    .page-indicator {\n      color: #454954;\n      height: 38px;\n      margin: 2em 1em 0 1em;\n    }\n  }\n\n  button {\n    margin-top: 1em;\n    text-align: center;\n    min-width: 38px;\n    min-height: 38px;\n    border: #e3e8ee solid 1px;\n    margin-right: -1px;\n    font-family: var(--font);\n    background-color: #f7f7f8;\n    color: #454954;\n    cursor: pointer;\n\n    &.current {\n      background-color: white;\n      color: #2c2e2e;\n    }\n    &:disabled {\n      cursor: default;\n    }\n  }\n\n  .page-numbers {\n    margin: 0 8px;\n  }\n</style>\n\n<nav class=\"pagination-nav\">\n  <span class=\"page-indicator\">\n    <span class=\"page-start\">\n      {current_page * items_per_page + 1}\n    </span>\n    -\n    <span class=\"page-end\">\n      {Math.min((current_page + 1) * items_per_page, num_items)}\n    </span>\n    of\n    <span class=\"total\">{num_items}</span>\n  </span>\n  {#if num_pages > 1}\n    <button\n      class=\"paginate-btn first-btn\"\n      on:click={() => changePage(0)}\n      disabled={current_page === 0}\n    >\n      <FirstIcon style=\"width: 24px; height: 24px;\" />\n    </button>\n    <button\n      class=\"paginate-btn back-btn\"\n      on:click={() => changePage(current_page - 1)}\n      disabled={current_page === 0}\n    >\n      <BackIcon style=\"width: 24px; height: 24px;\" />\n    </button>\n  {/if}\n  {#if num_pages > 1}\n    <button\n      class=\"paginate-btn next-btn\"\n      on:click={() => changePage(current_page + 1)}\n      disabled={current_page === num_pages - 1}\n    >\n      <NextIcon style=\"height:24px;width:24px;\" />\n    </button>\n    <button\n      class=\"paginate-btn last-btn\"\n      on:click={() => changePage(num_pages - 1)}\n      disabled={current_page === num_pages - 1}\n    >\n      <LastIcon style=\"height:24px;width:24px;\" />\n    </button>\n  {/if}\n</nav>\n","<svelte:options tag=\"nylas-mailbox\" />\n\n<script lang=\"ts\">\n  import { ErrorStore, fetchAccount, ManifestStore } from \"@commons\";\n  import { fetchMessage } from \"@commons/connections/messages\";\n  import {\n    AccountOrganizationUnit,\n    MailboxActions,\n  } from \"@commons/enums/Nylas\";\n  import {\n    buildInternalProps,\n    downloadAttachedFile,\n    getEventDispatcher,\n  } from \"@commons/methods/component\";\n  import { FolderStore } from \"@commons/store/folders\";\n  import { LabelStore } from \"@commons/store/labels\";\n  import { MailboxStore } from \"@commons/store/mailbox\";\n  import type {\n    Account,\n    Folder,\n    Label,\n    MailboxProperties,\n    MailboxQuery,\n    Message,\n    Thread,\n    File,\n  } from \"@commons/types/Nylas\";\n  import { downloadFile } from \"@commons/connections/files\";\n  import { get_current_component, onMount, tick } from \"svelte/internal\";\n  import \"../../email/src/Email.svelte\";\n  import MarkReadIcon from \"./assets/envelope-open-text.svg\";\n  import MarkUnreadIcon from \"./assets/envelope.svg\";\n  import LoadingIcon from \"./assets/loading.svg\";\n  import TrashIcon from \"./assets/trash-alt.svg\";\n  import \"./components/PaginationNav.svelte\";\n  import { FilesStore } from \"@commons/store/files\";\n\n  const dispatchEvent = getEventDispatcher(get_current_component());\n  $: dispatchEvent(\"manifestLoaded\", manifest);\n\n  $: if (Object.keys($ErrorStore).length) {\n    dispatchEvent(\"onError\", $ErrorStore);\n  }\n\n  export let id: string = \"\";\n  export let access_token: string = \"\";\n\n  export let actions_bar: MailboxActions[];\n  export let all_threads: Thread[];\n  export let header: string = \"Mailbox\";\n  export let items_per_page: number;\n  export let keyword_to_search: string;\n  export let onSelectThread: (event: MouseEvent, t: Thread) => void =\n    onSelectOne;\n  // query_string format => \"in=trash from=phil.r@nylas.com\"\n  export let query_string: string; // Allowed query parameter list https://developer.nylas.com/docs/api/#get/threads\n  export let show_star: boolean;\n  export let show_thread_checkbox: boolean;\n\n  const defaultValueMap: Partial<MailboxProperties> = {\n    actions_bar: [],\n    items_per_page: 13,\n    query_string: \"in=inbox\",\n    show_star: false,\n    show_thread_checkbox: true,\n  };\n\n  let manifest: Partial<MailboxProperties> = {};\n  let _this = <MailboxProperties>buildInternalProps({}, {}, defaultValueMap);\n\n  let currentlySelectedThread: Thread | null;\n  let hasComponentLoaded = false;\n  let displayedThreadsPromise: Promise<Thread[]>;\n\n  // paginations vars\n  let currentPage: number = 0;\n  let numPages: number = 1;\n  let numThreads: number = 0;\n\n  onMount(async () => {\n    await tick();\n\n    manifest = ((await $ManifestStore[\n      JSON.stringify({ component_id: id, access_token })\n    ]) || {}) as MailboxProperties;\n\n    _this = buildInternalProps(\n      $$props,\n      manifest,\n      defaultValueMap,\n    ) as MailboxProperties;\n\n    // Fetch Account\n    if (id && !you.id && !_this.all_threads) {\n      you = await fetchAccount({\n        component_id: query.component_id,\n        access_token,\n      });\n    }\n\n    const accountOrganizationUnitQuery = {\n      component_id: id,\n      access_token,\n    };\n    // Initialize labels / folders\n    if (you?.organization_unit === AccountOrganizationUnit.Label) {\n      labels = await LabelStore.getLabels(accountOrganizationUnitQuery);\n    } else if (you?.organization_unit === AccountOrganizationUnit.Folder) {\n      folders = await FolderStore.getFolders(accountOrganizationUnitQuery);\n    }\n\n    await updateDisplayedThreads();\n\n    hasComponentLoaded = true;\n  });\n\n  let previousProps = $$props;\n  $: {\n    if (JSON.stringify(previousProps) !== JSON.stringify($$props)) {\n      _this = buildInternalProps(\n        $$props,\n        manifest,\n        defaultValueMap,\n      ) as MailboxProperties;\n      previousProps = $$props;\n    }\n  }\n\n  $: (async () => {\n    if (!_this.all_threads && _this.items_per_page && hasComponentLoaded) {\n      await updateDisplayedThreads(true);\n    }\n  })();\n\n  $: if (Array.isArray(_this.all_threads)) {\n    numThreads = _this.all_threads.length;\n    numPages = Math.ceil(numThreads / _this.items_per_page);\n\n    const pageStart = currentPage * _this.items_per_page;\n    threads = _this.all_threads.slice(\n      pageStart,\n      pageStart + _this.items_per_page,\n    );\n  }\n\n  let query: MailboxQuery;\n  $: {\n    query = {\n      component_id: id,\n      access_token,\n      query: Object.fromEntries(\n        new URLSearchParams(_this.query_string?.replaceAll(\" \", \"&\")),\n      ),\n    };\n    if (_this.keyword_to_search) {\n      query.keywordToSearch = _this.keyword_to_search;\n    }\n  }\n\n  let queryKey: string;\n  $: queryKey = JSON.stringify(query);\n\n  let threads: Thread[] = [];\n\n  let labels: Label[] = [];\n  $: trashLabelID = labels.length\n    ? labels.find((label) => label.name === \"trash\")?.id\n    : null;\n\n  let folders: Folder[] = [];\n  $: trashFolderID = folders.length\n    ? folders.find((folder) => folder.name === \"trash\")?.id\n    : null;\n\n  let you: Partial<Account> = {};\n\n  //#region methods\n  function fetchIndividualMessage(message: Message) {\n    return fetchMessage(query, message.id).then((json) => {\n      message.body = json.body;\n      return message;\n    });\n  }\n\n  async function updateDisplayedThreads(forceRefresh = false) {\n    if (displayedThreadsPromise) {\n      await displayedThreadsPromise;\n    }\n\n    if (!_this.all_threads && id) {\n      if (_this.keyword_to_search) {\n        displayedThreadsPromise = MailboxStore.getThreadsWithSearchKeyword(\n          query,\n          forceRefresh,\n        );\n        threads = (await displayedThreadsPromise) ?? [];\n      } else {\n        displayedThreadsPromise = MailboxStore.getThreads(\n          query,\n          currentPage,\n          _this.items_per_page,\n          forceRefresh,\n        );\n        threads = (await displayedThreadsPromise) ?? [];\n        numThreads = await MailboxStore.getNumberOfItems(query);\n        numPages = Math.ceil(numThreads / _this.items_per_page);\n      }\n    }\n  }\n\n  //#endregion methods\n\n  //#region actions\n  let areAllSelected = false;\n  $: areAllSelected = threads.some((thread) => thread.selected);\n\n  let areAllSelectedStarred = false;\n  $: areAllSelectedStarred = threads\n    .filter((thread) => thread.selected)\n    .some((thread) => thread.starred);\n\n  let areAllSelectedUnread = false;\n  $: areAllSelectedUnread = threads\n    .filter((thread) => thread.selected)\n    .some((thread) => thread.unread);\n\n  async function messageClicked(event: CustomEvent) {\n    let message = event.detail.message;\n\n    if (message && currentlySelectedThread) {\n      message = await fetchIndividualMessage(message);\n      threads = MailboxStore.hydrateMessageInThread(\n        message,\n        query,\n        currentPage,\n      );\n      if (FilesStore.hasInlineFiles(message)) {\n        message = await getMessageWithInlineFiles(message);\n        threads = MailboxStore.hydrateMessageInThread(\n          message,\n          query,\n          currentPage,\n        );\n      }\n    }\n  }\n\n  async function updateThreadStatus(updatedThread: any) {\n    if (id && updatedThread && updatedThread.id) {\n      await MailboxStore.updateThread(\n        {\n          access_token,\n          component_id: id,\n          thread_id: updatedThread.id,\n        },\n        queryKey,\n        updatedThread,\n        currentPage,\n        _this.items_per_page,\n      );\n    }\n  }\n\n  async function threadClicked(event: CustomEvent) {\n    const thread = event.detail.thread;\n\n    dispatchEvent(\"threadClicked\", { event, thread });\n    currentlySelectedThread = thread;\n    if (!_this.all_threads && thread?.expanded) {\n      if (thread.unread) {\n        thread.unread = false;\n        await updateThreadStatus(thread);\n      }\n      let message = await fetchIndividualMessage(\n        thread.messages[thread.messages.length - 1],\n      );\n      threads = MailboxStore.hydrateMessageInThread(\n        message,\n        query,\n        currentPage,\n      );\n      if (FilesStore.hasInlineFiles(message)) {\n        message = await getMessageWithInlineFiles(message);\n        threads = MailboxStore.hydrateMessageInThread(\n          message,\n          query,\n          currentPage,\n        );\n      }\n    }\n  }\n\n  async function getMessageWithInlineFiles(message: Message): Promise<Message> {\n    const fetchedFiles = await FilesStore.getFilesForMessage(message, {\n      component_id: id,\n      access_token,\n    });\n    for (const file of Object.values(fetchedFiles)) {\n      if (message.body) {\n        message.body = message.body?.replaceAll(\n          `src=\"cid:${file.content_id}\"`,\n          `src=\"data:${file.content_type};base64,${file.data}\"`,\n        );\n      }\n    }\n    return message;\n  }\n\n  let refreshingMailbox = false;\n  async function refreshClicked(event: MouseEvent) {\n    refreshingMailbox = true;\n    dispatchEvent(\"refreshClicked\", { event });\n    await updateDisplayedThreads(true);\n    refreshingMailbox = false;\n  }\n\n  function onSelectOne(event: MouseEvent, thread: Thread) {\n    if (Array.isArray(_this.all_threads)) {\n      thread.selected = !thread.selected;\n      threads = [...threads];\n    } else {\n      threads = MailboxStore.updateThreadSelection(\n        JSON.stringify(query),\n        currentPage,\n        thread.id,\n      );\n    }\n    dispatchEvent(\"onSelectOneClicked\", { event, thread });\n  }\n\n  function onSelectAll(event: MouseEvent) {\n    if (Array.isArray(_this.all_threads)) {\n      threads = threads.map((thread) => {\n        return { ...thread, selected: !areAllSelected };\n      });\n    } else {\n      threads = MailboxStore.updateThreadSelection(\n        JSON.stringify(query),\n        currentPage,\n      );\n    }\n    dispatchEvent(\"onSelectAllClicked\", {\n      event,\n      selectedThreads: threads.filter((thread) => thread.selected),\n    });\n  }\n\n  async function threadStarred(event: CustomEvent) {\n    const thread = event.detail.thread;\n    if (!Array.isArray(_this.all_threads)) {\n      await updateThreadStatus(thread);\n      threads = $MailboxStore[queryKey][currentPage].threads;\n    }\n\n    dispatchEvent(\"onStarSelected\", {\n      event,\n      starredThreads: [thread],\n    });\n  }\n\n  async function onStarSelected(event: MouseEvent) {\n    if (Array.isArray(_this.all_threads)) {\n      threads = threads.map((thread) => {\n        return { ...thread, starred: !areAllSelectedStarred };\n      });\n    } else {\n      const starThreadsPromises = [];\n      for (const thread of threads.filter((thread) => thread.selected)) {\n        thread.starred = !areAllSelectedStarred;\n        starThreadsPromises.push(updateThreadStatus(thread));\n      }\n      await Promise.all(starThreadsPromises);\n      threads = $MailboxStore[queryKey][currentPage].threads;\n    }\n\n    dispatchEvent(\"onStarSelected\", {\n      event,\n      selectedThreads: threads.filter((threads) => threads.selected),\n    });\n  }\n\n  async function toggleThreadUnreadStatus(event: CustomEvent) {\n    if (Array.isArray(_this.all_threads)) {\n      threads = [...threads];\n    } else {\n      await updateThreadStatus(event.detail.thread);\n      threads = $MailboxStore[queryKey][currentPage].threads;\n    }\n  }\n\n  async function onChangeSelectedReadStatus(event: MouseEvent) {\n    if (Array.isArray(_this.all_threads)) {\n      threads = threads.map((thread) => {\n        if (thread.selected) {\n          thread.unread = !areAllSelectedUnread;\n        }\n        return { ...thread };\n      });\n    } else {\n      const readStatusPromises = [];\n      for (const thread of threads.filter((thread) => thread.selected)) {\n        thread.unread = !areAllSelectedUnread;\n        readStatusPromises.push(updateThreadStatus(thread));\n      }\n      await Promise.all(readStatusPromises);\n      threads = $MailboxStore[queryKey][currentPage].threads;\n    }\n    dispatchEvent(\"onChangeSelectedReadStatus\", {\n      event,\n      selectedThreads: threads.filter((threads) => threads.selected),\n    });\n  }\n\n  async function deleteThread(event: CustomEvent) {\n    const thread = event.detail.thread;\n\n    if (Array.isArray(_this.all_threads)) {\n      threads = threads.filter(\n        (currentThread) => currentThread.id !== thread.id,\n      );\n    } else {\n      if (trashLabelID) {\n        const existingLabelIds =\n          thread.labels?.map((label: any) => label.id) || [];\n        thread.label_ids = [...existingLabelIds, trashLabelID];\n      } else if (trashFolderID) {\n        thread.folder_id = trashFolderID;\n      }\n      await updateThreadStatus(thread);\n      await updateDisplayedThreads(true);\n    }\n    returnToMailbox();\n  }\n\n  async function downloadSelectedFile(event: CustomEvent) {\n    const file = event.detail.file;\n    const downloadedFileData = await downloadFile({\n      file_id: file.id,\n      component_id: id,\n      access_token,\n    });\n    downloadAttachedFile(downloadedFileData, file);\n  }\n\n  async function onDeleteSelected(event: MouseEvent) {\n    if (Array.isArray(_this.all_threads)) {\n      const selectedThreads = threads.filter((thread) => thread.selected);\n      threads = threads.filter((thread) => !selectedThreads.includes(thread));\n    } else if (trashLabelID || trashFolderID) {\n      const deleteThreadsPromise = [];\n      for (const thread of threads.filter((thread) => thread.selected)) {\n        deleteThreadsPromise.push(deleteThread(<any>{ detail: { thread } }));\n      }\n      await Promise.all(deleteThreadsPromise);\n    }\n    dispatchEvent(\"onDeleteSelected\", {\n      event,\n      deletedThreads: currentlySelectedThread\n        ? [currentlySelectedThread]\n        : threads,\n    });\n  }\n\n  function returnToMailbox() {\n    if (currentlySelectedThread) {\n      currentlySelectedThread.expanded = false;\n      currentlySelectedThread = null;\n    }\n  }\n  //#endregion actions\n\n  //#region pagination\n  async function changePage(event: CustomEvent) {\n    currentPage = event.detail.newPage;\n    await updateDisplayedThreads();\n  }\n  //#endregion pagination\n</script>\n\n<style lang=\"scss\">\n  @use \"sass:list\";\n  @import \"../../theming/reset.scss\";\n  @import \"../../theming/animation.scss\";\n  @import \"../../theming/variables.scss\";\n  @import \"../../../commons/src/components/checkbox.scss\";\n\n  $spacing-s: 0.5rem;\n  $spacing-m: 1rem;\n  main {\n    height: 100%;\n    width: 100%;\n    position: relative;\n    display: grid;\n    grid-auto-rows: max-content;\n    font-family: var(\n      --mailbox-font-family,\n      \"-apple-system, BlinkMacSystemFont, sans-serif\"\n    );\n\n    $outline-style: 1px solid var(--mailbox-border-color, var(--grey-lighter));\n    @mixin barStyle {\n      outline: $outline-style;\n      display: flex;\n      align-items: center;\n      padding: 24px 16px;\n      gap: 8px;\n    }\n\n    header {\n      @include barStyle;\n      border-radius: 4px 4px 0 0;\n      font-weight: bold;\n      button {\n        svg {\n          &.refreshing {\n            animation: rotate 1s linear infinite;\n          }\n        }\n      }\n    }\n\n    button {\n      background: none;\n      display: flex;\n      cursor: pointer;\n    }\n\n    [role=\"toolbar\"] {\n      @include barStyle;\n      padding: $spacing-s $spacing-m;\n      gap: $spacing-m;\n    }\n\n    // Toggle select-all checkbox and thread checkbox from CSS Var\n    .thread-checkbox {\n      input {\n        @include checkbox;\n        &:disabled {\n          cursor: not-allowed;\n        }\n      }\n    }\n\n    div.starred {\n      position: relative;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      button {\n        background-color: transparent;\n        cursor: pointer;\n        &:before {\n          content: \"\\2605\";\n          display: inline-block;\n          font-size: 1em;\n          color: var(--mailbox-starred-disabled-color, #ccc);\n          -webkit-user-select: none;\n          -moz-user-select: none;\n          user-select: none;\n        }\n\n        &.starred:before {\n          color: var(--mailbox-starred-enabled-color, #ffc107);\n        }\n      }\n    }\n\n    #mailboxlist li {\n      display: grid;\n      grid-template-columns: auto 1fr;\n      gap: 0.5rem;\n      align-items: center;\n      justify-content: left;\n\n      .checkbox-container.thread-checkbox {\n        padding: 1rem 0 0 1rem;\n        align-self: baseline;\n      }\n\n      &:hover {\n        $hover-outline-width: 1px;\n        outline: $hover-outline-width solid\n          var(--mailbox-grey-warm-color, var(--grey-warm));\n        cursor: pointer;\n      }\n\n      // #region define border styles\n      --nylas-email-border: none;\n      outline: $outline-style;\n      // #endregion define border styles\n\n      // #region define background styles\n      --nylas-email-background: transparent;\n      --nylas-email-border-left-width: 0px;\n      --nylas-email-unread-background: transparent;\n\n      &:not(.unread) {\n        background: var(--mailbox-read-color, var(--grey-lightest));\n      }\n      &.unread {\n        background: var(--mailbox-unread-color, var(--nylas-email-background));\n      }\n      &.no-messages {\n        background: var(--grey-lighter);\n        .thread-checkbox {\n          input {\n            background: var(--grey-dark-warm);\n          }\n        }\n      }\n      // #endregion define background styles\n\n      // #region define checked styles\n      &.checked {\n        border-left: 4px solid var(--mailbox-checked-border-color, var(--blue));\n        background: var(--mailbox-checked-bg-color, var(--blue-lighter));\n\n        .checkbox-container.thread-checkbox {\n          padding-left: 13px;\n        }\n      }\n      // #endregion define checked styles\n    }\n  }\n\n  ul.refreshing {\n    filter: blur(0.2rem);\n  }\n\n  .checkbox-container {\n    padding: 4px;\n  }\n\n  .mailbox-loader,\n  .mailbox-empty {\n    width: calc(100% - 16px);\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    box-shadow: none;\n  }\n\n  .mailbox-loader {\n    position: absolute;\n  }\n\n  @keyframes rotate {\n    to {\n      transform: rotate(360deg);\n    }\n  }\n\n  @media #{$desktop} {\n    main {\n      #mailboxlist li {\n        .checkbox-container.thread-checkbox {\n          padding: 0 0 0 $spacing-m;\n          align-self: center;\n        }\n      }\n\n      div.starred {\n        button {\n          &:hover:before {\n            color: var(--mailbox-starred-enabled-color, #ffc107);\n          }\n        }\n      }\n    }\n  }\n</style>\n\n<main>\n  {#if hasComponentLoaded}\n    {#if currentlySelectedThread}\n      <div class=\"email-container\">\n        <nylas-email\n          clean_conversation={false}\n          thread={currentlySelectedThread}\n          {you}\n          show_star={_this.show_star}\n          click_action=\"mailbox\"\n          on:messageClicked={messageClicked}\n          on:threadStarred={threadStarred}\n          on:returnToMailbox={returnToMailbox}\n          on:toggleThreadUnreadStatus={toggleThreadUnreadStatus}\n          on:threadDeleted={deleteThread}\n          on:downloadClicked={downloadSelectedFile}\n        />\n      </div>\n    {:else}\n      {#if _this.header}\n        <header>\n          <button on:click={refreshClicked}>\n            <svg\n              width=\"16\"\n              height=\"16\"\n              viewBox=\"0 0 16 16\"\n              class:refreshing={refreshingMailbox}\n            >\n              <path\n                d=\"M9.41757 0.780979L9.57471 0.00782773C12.9388 0.717887 15.4617 3.80648 15.4617 7.49954C15.4617 8.7935 15.1519 10.0136 14.6046 11.083L16 12.458L11.6994 13.7113L12.7846 9.28951L14.0208 10.5077C14.4473 9.60009 14.6869 8.5795 14.6869 7.49954C14.6869 4.17742 12.4188 1.41444 9.41757 0.780979ZM0 2.90469L4.24241 1.46013L3.3489 5.92625L2.06118 4.7644C1.71079 5.60175 1.51627 6.5265 1.51627 7.49954C1.51627 10.8217 3.7844 13.5847 6.78563 14.2182L6.62849 14.9913C3.26437 14.2812 0.741524 11.1926 0.741524 7.49954C0.741524 6.32506 0.996751 5.21133 1.45323 4.21587L0 2.90469Z\"\n              />\n            </svg>\n          </button>\n          <h1>{header}</h1>\n        </header>\n      {/if}\n      {#if _this.actions_bar.length}\n        <div\n          role=\"toolbar\"\n          aria-label=\"Bulk actions\"\n          aria-controls=\"mailboxlist\"\n        >\n          {#if _this.show_thread_checkbox && _this.actions_bar.includes(MailboxActions.SELECTALL)}\n            <div class=\"thread-checkbox\">\n              {#each [areAllSelected ? \"Deselect all\" : \"Select all\"] as selectAllTitle}\n                <input\n                  title={selectAllTitle}\n                  aria-label={selectAllTitle}\n                  type=\"checkbox\"\n                  checked={areAllSelected}\n                  on:click={onSelectAll}\n                />\n              {/each}\n            </div>\n          {/if}\n          {#if threads.filter((thread) => thread.selected).length}\n            {#if _this.actions_bar.includes(MailboxActions.DELETE)}\n              <div class=\"delete\">\n                <button\n                  title=\"Delete selected email(s)\"\n                  aria-label=\"Delete selected email(s)\"\n                  on:click={(e) => onDeleteSelected(e)}><TrashIcon /></button\n                >\n              </div>\n            {/if}\n            {#if _this.show_star && _this.actions_bar.includes(MailboxActions.STAR)}\n              <div class=\"starred\">\n                {#each [areAllSelectedStarred ? \"Unstar selected email(s)\" : \"Star selected email(s)\"] as starAllTitle}\n                  <button\n                    class={areAllSelectedStarred ? \"starred\" : \"\"}\n                    title={starAllTitle}\n                    aria-label={starAllTitle}\n                    role=\"switch\"\n                    aria-checked={areAllSelectedStarred}\n                    on:click={(e) => onStarSelected(e)}\n                  />\n                {/each}\n              </div>\n            {/if}\n            {#if _this.actions_bar.includes(MailboxActions.UNREAD)}\n              <div class=\"read-status\">\n                {#if areAllSelectedUnread}\n                  <button\n                    data-cy=\"mark-read\"\n                    title=\"Mark selected email(s) as read\"\n                    aria-label=\"Mark selected email(s) as read\"\n                    on:click={(e) => onChangeSelectedReadStatus(e)}\n                  >\n                    <MarkReadIcon />\n                  </button>\n                {:else}\n                  <button\n                    data-cy=\"mark-unread\"\n                    title=\"Mark selected email(s) as unread\"\n                    aria-label=\"Mark selected email(s) as unread\"\n                    on:click={(e) => onChangeSelectedReadStatus(e)}\n                  >\n                    <MarkUnreadIcon />\n                  </button>\n                {/if}\n              </div>\n            {/if}\n          {/if}\n        </div>\n      {/if}\n      <ul id=\"mailboxlist\" class:refreshing={refreshingMailbox}>\n        {#each threads as thread}\n          {#each [thread.selected ? `Deselect thread ${thread.subject}` : `Select thread ${thread.subject}`] as selectTitle}\n            <li\n              class:unread={thread.unread}\n              class:checked={thread.selected}\n              class:no-messages={thread &&\n                thread?.messages &&\n                thread?.messages?.length <= 0}\n            >\n              {#if _this.show_thread_checkbox}\n                <div class=\"checkbox-container thread-checkbox\">\n                  <input\n                    title={selectTitle}\n                    aria-label={selectTitle}\n                    type=\"checkbox\"\n                    checked={thread.selected}\n                    disabled={thread &&\n                      thread?.messages &&\n                      thread?.messages?.length <= 0}\n                    on:click={(e) => onSelectOne(e, thread)}\n                  />\n                </div>\n              {/if}\n              <div class=\"email-container\">\n                {#key thread.id}\n                  <nylas-email\n                    clean_conversation={false}\n                    {thread}\n                    {you}\n                    show_star={_this.show_star}\n                    click_action=\"mailbox\"\n                    on:threadClicked={threadClicked}\n                    on:messageClicked={messageClicked}\n                    on:threadStarred={threadStarred}\n                    on:returnToMailbox={returnToMailbox}\n                    on:toggleThreadUnreadStatus={toggleThreadUnreadStatus}\n                    on:threadDeleted={deleteThread}\n                    on:downloadClicked={downloadSelectedFile}\n                    show_thread_actions={thread.selected}\n                  />\n                {/key}\n              </div>\n            </li>\n          {/each}\n        {:else}\n          <div class=\"mailbox-empty\">\n            {#if _this.header}\n              {header}\n            {:else}\n              Your Mailbox\n            {/if} is empty!\n          </div>\n        {/each}\n        {#if !_this.keyword_to_search && threads && threads.length > 0}\n          <pagination-nav\n            current_page={currentPage}\n            items_per_page={_this.items_per_page}\n            num_pages={numPages}\n            num_items={numThreads}\n            visible={true}\n            on:changePage={changePage}\n          />\n        {/if}\n      </ul>\n    {/if}\n  {:else}\n    <div class=\"mailbox-loader\">\n      <LoadingIcon\n        class=\"spinner\"\n        style=\"height:18px; animation: rotate 2s linear infinite; margin:10px;\"\n      />\n      Loading...\n    </div>\n  {/if}\n</main>\n"],"names":["initialize","__spreadValues","this","DOMPurify.sanitize","DropdownSymbol"],"mappings":"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"}